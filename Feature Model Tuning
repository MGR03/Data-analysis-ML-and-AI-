{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from scipy.stats import zscore\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.model_selection import train_test_split, cross_val_predict\n",
    "import pickle "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Converting excel file into csv file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "dataConvert = pd.read_excel (\"Future_predictions.xlsx\")\n",
    "#dataConvert.to_csv('futurepredictions.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Reading the futureprediction CSV file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Time</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>...</th>\n",
       "      <th>580</th>\n",
       "      <th>581</th>\n",
       "      <th>582</th>\n",
       "      <th>583</th>\n",
       "      <th>584</th>\n",
       "      <th>585</th>\n",
       "      <th>586</th>\n",
       "      <th>587</th>\n",
       "      <th>588</th>\n",
       "      <th>589</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>2008-07-19 11:55:00</td>\n",
       "      <td>3030.93</td>\n",
       "      <td>2564.00</td>\n",
       "      <td>2187.7333</td>\n",
       "      <td>1411.1265</td>\n",
       "      <td>1.3602</td>\n",
       "      <td>100</td>\n",
       "      <td>97.6133</td>\n",
       "      <td>0.1242</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.5005</td>\n",
       "      <td>0.0118</td>\n",
       "      <td>0.0035</td>\n",
       "      <td>2.3630</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2008-07-19 12:32:00</td>\n",
       "      <td>3095.78</td>\n",
       "      <td>2465.14</td>\n",
       "      <td>2230.4222</td>\n",
       "      <td>1463.6606</td>\n",
       "      <td>0.8294</td>\n",
       "      <td>100</td>\n",
       "      <td>102.3433</td>\n",
       "      <td>0.1247</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0060</td>\n",
       "      <td>208.2045</td>\n",
       "      <td>0.5019</td>\n",
       "      <td>0.0223</td>\n",
       "      <td>0.0055</td>\n",
       "      <td>4.4447</td>\n",
       "      <td>0.0096</td>\n",
       "      <td>0.0201</td>\n",
       "      <td>0.0060</td>\n",
       "      <td>208.2045</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>2008-07-19 13:17:00</td>\n",
       "      <td>2932.61</td>\n",
       "      <td>2559.94</td>\n",
       "      <td>2186.4111</td>\n",
       "      <td>1698.0172</td>\n",
       "      <td>1.5102</td>\n",
       "      <td>100</td>\n",
       "      <td>95.4878</td>\n",
       "      <td>0.1241</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0148</td>\n",
       "      <td>82.8602</td>\n",
       "      <td>0.4958</td>\n",
       "      <td>0.0157</td>\n",
       "      <td>0.0039</td>\n",
       "      <td>3.1745</td>\n",
       "      <td>0.0584</td>\n",
       "      <td>0.0484</td>\n",
       "      <td>0.0148</td>\n",
       "      <td>82.8602</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>2008-07-19 14:43:00</td>\n",
       "      <td>2988.72</td>\n",
       "      <td>2479.90</td>\n",
       "      <td>2199.0333</td>\n",
       "      <td>909.7926</td>\n",
       "      <td>1.3204</td>\n",
       "      <td>100</td>\n",
       "      <td>104.2367</td>\n",
       "      <td>0.1217</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0044</td>\n",
       "      <td>73.8432</td>\n",
       "      <td>0.4990</td>\n",
       "      <td>0.0103</td>\n",
       "      <td>0.0025</td>\n",
       "      <td>2.0544</td>\n",
       "      <td>0.0202</td>\n",
       "      <td>0.0149</td>\n",
       "      <td>0.0044</td>\n",
       "      <td>73.8432</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>2008-07-19 15:22:00</td>\n",
       "      <td>3032.24</td>\n",
       "      <td>2502.87</td>\n",
       "      <td>2233.3667</td>\n",
       "      <td>1326.5200</td>\n",
       "      <td>1.5334</td>\n",
       "      <td>100</td>\n",
       "      <td>100.3967</td>\n",
       "      <td>0.1235</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.4800</td>\n",
       "      <td>0.4766</td>\n",
       "      <td>0.1045</td>\n",
       "      <td>99.3032</td>\n",
       "      <td>0.0202</td>\n",
       "      <td>0.0149</td>\n",
       "      <td>0.0044</td>\n",
       "      <td>73.8432</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 592 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0                 Time        0        1          2          3  \\\n",
       "0           0  2008-07-19 11:55:00  3030.93  2564.00  2187.7333  1411.1265   \n",
       "1           1  2008-07-19 12:32:00  3095.78  2465.14  2230.4222  1463.6606   \n",
       "2           2  2008-07-19 13:17:00  2932.61  2559.94  2186.4111  1698.0172   \n",
       "3           3  2008-07-19 14:43:00  2988.72  2479.90  2199.0333   909.7926   \n",
       "4           4  2008-07-19 15:22:00  3032.24  2502.87  2233.3667  1326.5200   \n",
       "\n",
       "        4    5         6       7  ...     580       581     582     583  \\\n",
       "0  1.3602  100   97.6133  0.1242  ...     NaN       NaN  0.5005  0.0118   \n",
       "1  0.8294  100  102.3433  0.1247  ...  0.0060  208.2045  0.5019  0.0223   \n",
       "2  1.5102  100   95.4878  0.1241  ...  0.0148   82.8602  0.4958  0.0157   \n",
       "3  1.3204  100  104.2367  0.1217  ...  0.0044   73.8432  0.4990  0.0103   \n",
       "4  1.5334  100  100.3967  0.1235  ...     NaN       NaN  0.4800  0.4766   \n",
       "\n",
       "      584      585     586     587     588       589  \n",
       "0  0.0035   2.3630     NaN     NaN     NaN       NaN  \n",
       "1  0.0055   4.4447  0.0096  0.0201  0.0060  208.2045  \n",
       "2  0.0039   3.1745  0.0584  0.0484  0.0148   82.8602  \n",
       "3  0.0025   2.0544  0.0202  0.0149  0.0044   73.8432  \n",
       "4  0.1045  99.3032  0.0202  0.0149  0.0044   73.8432  \n",
       "\n",
       "[5 rows x 592 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "futurepred = pd.read_csv (\"futurepredictions.csv\")\n",
    "futurepred.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Data shape of the excel file - Futurepreductions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(18, 592)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "futurepred.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Reading signaldata csv file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Time</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>...</th>\n",
       "      <th>581</th>\n",
       "      <th>582</th>\n",
       "      <th>583</th>\n",
       "      <th>584</th>\n",
       "      <th>585</th>\n",
       "      <th>586</th>\n",
       "      <th>587</th>\n",
       "      <th>588</th>\n",
       "      <th>589</th>\n",
       "      <th>Pass/Fail</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2008-07-19 11:55:00</td>\n",
       "      <td>3030.93</td>\n",
       "      <td>2564.00</td>\n",
       "      <td>2187.7333</td>\n",
       "      <td>1411.1265</td>\n",
       "      <td>1.3602</td>\n",
       "      <td>100.0</td>\n",
       "      <td>97.6133</td>\n",
       "      <td>0.1242</td>\n",
       "      <td>1.5005</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.5005</td>\n",
       "      <td>0.0118</td>\n",
       "      <td>0.0035</td>\n",
       "      <td>2.3630</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2008-07-19 12:32:00</td>\n",
       "      <td>3095.78</td>\n",
       "      <td>2465.14</td>\n",
       "      <td>2230.4222</td>\n",
       "      <td>1463.6606</td>\n",
       "      <td>0.8294</td>\n",
       "      <td>100.0</td>\n",
       "      <td>102.3433</td>\n",
       "      <td>0.1247</td>\n",
       "      <td>1.4966</td>\n",
       "      <td>...</td>\n",
       "      <td>208.2045</td>\n",
       "      <td>0.5019</td>\n",
       "      <td>0.0223</td>\n",
       "      <td>0.0055</td>\n",
       "      <td>4.4447</td>\n",
       "      <td>0.0096</td>\n",
       "      <td>0.0201</td>\n",
       "      <td>0.0060</td>\n",
       "      <td>208.2045</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2008-07-19 13:17:00</td>\n",
       "      <td>2932.61</td>\n",
       "      <td>2559.94</td>\n",
       "      <td>2186.4111</td>\n",
       "      <td>1698.0172</td>\n",
       "      <td>1.5102</td>\n",
       "      <td>100.0</td>\n",
       "      <td>95.4878</td>\n",
       "      <td>0.1241</td>\n",
       "      <td>1.4436</td>\n",
       "      <td>...</td>\n",
       "      <td>82.8602</td>\n",
       "      <td>0.4958</td>\n",
       "      <td>0.0157</td>\n",
       "      <td>0.0039</td>\n",
       "      <td>3.1745</td>\n",
       "      <td>0.0584</td>\n",
       "      <td>0.0484</td>\n",
       "      <td>0.0148</td>\n",
       "      <td>82.8602</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2008-07-19 14:43:00</td>\n",
       "      <td>2988.72</td>\n",
       "      <td>2479.90</td>\n",
       "      <td>2199.0333</td>\n",
       "      <td>909.7926</td>\n",
       "      <td>1.3204</td>\n",
       "      <td>100.0</td>\n",
       "      <td>104.2367</td>\n",
       "      <td>0.1217</td>\n",
       "      <td>1.4882</td>\n",
       "      <td>...</td>\n",
       "      <td>73.8432</td>\n",
       "      <td>0.4990</td>\n",
       "      <td>0.0103</td>\n",
       "      <td>0.0025</td>\n",
       "      <td>2.0544</td>\n",
       "      <td>0.0202</td>\n",
       "      <td>0.0149</td>\n",
       "      <td>0.0044</td>\n",
       "      <td>73.8432</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2008-07-19 15:22:00</td>\n",
       "      <td>3032.24</td>\n",
       "      <td>2502.87</td>\n",
       "      <td>2233.3667</td>\n",
       "      <td>1326.5200</td>\n",
       "      <td>1.5334</td>\n",
       "      <td>100.0</td>\n",
       "      <td>100.3967</td>\n",
       "      <td>0.1235</td>\n",
       "      <td>1.5031</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.4800</td>\n",
       "      <td>0.4766</td>\n",
       "      <td>0.1045</td>\n",
       "      <td>99.3032</td>\n",
       "      <td>0.0202</td>\n",
       "      <td>0.0149</td>\n",
       "      <td>0.0044</td>\n",
       "      <td>73.8432</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1562</th>\n",
       "      <td>2008-10-16 15:13:00</td>\n",
       "      <td>2899.41</td>\n",
       "      <td>2464.36</td>\n",
       "      <td>2179.7333</td>\n",
       "      <td>3085.3781</td>\n",
       "      <td>1.4843</td>\n",
       "      <td>100.0</td>\n",
       "      <td>82.2467</td>\n",
       "      <td>0.1248</td>\n",
       "      <td>1.3424</td>\n",
       "      <td>...</td>\n",
       "      <td>203.1720</td>\n",
       "      <td>0.4988</td>\n",
       "      <td>0.0143</td>\n",
       "      <td>0.0039</td>\n",
       "      <td>2.8669</td>\n",
       "      <td>0.0068</td>\n",
       "      <td>0.0138</td>\n",
       "      <td>0.0047</td>\n",
       "      <td>203.1720</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1563</th>\n",
       "      <td>2008-10-16 20:49:00</td>\n",
       "      <td>3052.31</td>\n",
       "      <td>2522.55</td>\n",
       "      <td>2198.5667</td>\n",
       "      <td>1124.6595</td>\n",
       "      <td>0.8763</td>\n",
       "      <td>100.0</td>\n",
       "      <td>98.4689</td>\n",
       "      <td>0.1205</td>\n",
       "      <td>1.4333</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.4975</td>\n",
       "      <td>0.0131</td>\n",
       "      <td>0.0036</td>\n",
       "      <td>2.6238</td>\n",
       "      <td>0.0068</td>\n",
       "      <td>0.0138</td>\n",
       "      <td>0.0047</td>\n",
       "      <td>203.1720</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1564</th>\n",
       "      <td>2008-10-17 05:26:00</td>\n",
       "      <td>2978.81</td>\n",
       "      <td>2379.78</td>\n",
       "      <td>2206.3000</td>\n",
       "      <td>1110.4967</td>\n",
       "      <td>0.8236</td>\n",
       "      <td>100.0</td>\n",
       "      <td>99.4122</td>\n",
       "      <td>0.1208</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>43.5231</td>\n",
       "      <td>0.4987</td>\n",
       "      <td>0.0153</td>\n",
       "      <td>0.0041</td>\n",
       "      <td>3.0590</td>\n",
       "      <td>0.0197</td>\n",
       "      <td>0.0086</td>\n",
       "      <td>0.0025</td>\n",
       "      <td>43.5231</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1565</th>\n",
       "      <td>2008-10-17 06:01:00</td>\n",
       "      <td>2894.92</td>\n",
       "      <td>2532.01</td>\n",
       "      <td>2177.0333</td>\n",
       "      <td>1183.7287</td>\n",
       "      <td>1.5726</td>\n",
       "      <td>100.0</td>\n",
       "      <td>98.7978</td>\n",
       "      <td>0.1213</td>\n",
       "      <td>1.4622</td>\n",
       "      <td>...</td>\n",
       "      <td>93.4941</td>\n",
       "      <td>0.5004</td>\n",
       "      <td>0.0178</td>\n",
       "      <td>0.0038</td>\n",
       "      <td>3.5662</td>\n",
       "      <td>0.0262</td>\n",
       "      <td>0.0245</td>\n",
       "      <td>0.0075</td>\n",
       "      <td>93.4941</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1566</th>\n",
       "      <td>2008-10-17 06:07:00</td>\n",
       "      <td>2944.92</td>\n",
       "      <td>2450.76</td>\n",
       "      <td>2195.4444</td>\n",
       "      <td>2914.1792</td>\n",
       "      <td>1.5978</td>\n",
       "      <td>100.0</td>\n",
       "      <td>85.1011</td>\n",
       "      <td>0.1235</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>137.7844</td>\n",
       "      <td>0.4987</td>\n",
       "      <td>0.0181</td>\n",
       "      <td>0.0040</td>\n",
       "      <td>3.6275</td>\n",
       "      <td>0.0117</td>\n",
       "      <td>0.0162</td>\n",
       "      <td>0.0045</td>\n",
       "      <td>137.7844</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1567 rows Ã— 592 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                     Time        0        1          2          3       4  \\\n",
       "0     2008-07-19 11:55:00  3030.93  2564.00  2187.7333  1411.1265  1.3602   \n",
       "1     2008-07-19 12:32:00  3095.78  2465.14  2230.4222  1463.6606  0.8294   \n",
       "2     2008-07-19 13:17:00  2932.61  2559.94  2186.4111  1698.0172  1.5102   \n",
       "3     2008-07-19 14:43:00  2988.72  2479.90  2199.0333   909.7926  1.3204   \n",
       "4     2008-07-19 15:22:00  3032.24  2502.87  2233.3667  1326.5200  1.5334   \n",
       "...                   ...      ...      ...        ...        ...     ...   \n",
       "1562  2008-10-16 15:13:00  2899.41  2464.36  2179.7333  3085.3781  1.4843   \n",
       "1563  2008-10-16 20:49:00  3052.31  2522.55  2198.5667  1124.6595  0.8763   \n",
       "1564  2008-10-17 05:26:00  2978.81  2379.78  2206.3000  1110.4967  0.8236   \n",
       "1565  2008-10-17 06:01:00  2894.92  2532.01  2177.0333  1183.7287  1.5726   \n",
       "1566  2008-10-17 06:07:00  2944.92  2450.76  2195.4444  2914.1792  1.5978   \n",
       "\n",
       "          5         6       7       8  ...       581     582     583     584  \\\n",
       "0     100.0   97.6133  0.1242  1.5005  ...       NaN  0.5005  0.0118  0.0035   \n",
       "1     100.0  102.3433  0.1247  1.4966  ...  208.2045  0.5019  0.0223  0.0055   \n",
       "2     100.0   95.4878  0.1241  1.4436  ...   82.8602  0.4958  0.0157  0.0039   \n",
       "3     100.0  104.2367  0.1217  1.4882  ...   73.8432  0.4990  0.0103  0.0025   \n",
       "4     100.0  100.3967  0.1235  1.5031  ...       NaN  0.4800  0.4766  0.1045   \n",
       "...     ...       ...     ...     ...  ...       ...     ...     ...     ...   \n",
       "1562  100.0   82.2467  0.1248  1.3424  ...  203.1720  0.4988  0.0143  0.0039   \n",
       "1563  100.0   98.4689  0.1205  1.4333  ...       NaN  0.4975  0.0131  0.0036   \n",
       "1564  100.0   99.4122  0.1208     NaN  ...   43.5231  0.4987  0.0153  0.0041   \n",
       "1565  100.0   98.7978  0.1213  1.4622  ...   93.4941  0.5004  0.0178  0.0038   \n",
       "1566  100.0   85.1011  0.1235     NaN  ...  137.7844  0.4987  0.0181  0.0040   \n",
       "\n",
       "          585     586     587     588       589  Pass/Fail  \n",
       "0      2.3630     NaN     NaN     NaN       NaN         -1  \n",
       "1      4.4447  0.0096  0.0201  0.0060  208.2045         -1  \n",
       "2      3.1745  0.0584  0.0484  0.0148   82.8602          1  \n",
       "3      2.0544  0.0202  0.0149  0.0044   73.8432         -1  \n",
       "4     99.3032  0.0202  0.0149  0.0044   73.8432         -1  \n",
       "...       ...     ...     ...     ...       ...        ...  \n",
       "1562   2.8669  0.0068  0.0138  0.0047  203.1720         -1  \n",
       "1563   2.6238  0.0068  0.0138  0.0047  203.1720         -1  \n",
       "1564   3.0590  0.0197  0.0086  0.0025   43.5231         -1  \n",
       "1565   3.5662  0.0262  0.0245  0.0075   93.4941         -1  \n",
       "1566   3.6275  0.0117  0.0162  0.0045  137.7844         -1  \n",
       "\n",
       "[1567 rows x 592 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "signaldata = pd.read_csv (\"signal-data.csv\")\n",
    "signaldata"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Checking signal data set shape and other information related to the dataframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1567, 592)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "signaldata.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Time          object\n",
       "0            float64\n",
       "1            float64\n",
       "2            float64\n",
       "3            float64\n",
       "              ...   \n",
       "586          float64\n",
       "587          float64\n",
       "588          float64\n",
       "589          float64\n",
       "Pass/Fail      int64\n",
       "Length: 592, dtype: object"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "signaldata.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Time          0\n",
       "0             6\n",
       "1             7\n",
       "2            14\n",
       "3            14\n",
       "             ..\n",
       "586           1\n",
       "587           1\n",
       "588           1\n",
       "589           1\n",
       "Pass/Fail     0\n",
       "Length: 592, dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "signaldata.isnull().sum() #There are number of columns with NULL values. Since these data represent signal \n",
    "                          #from certain singals, we cannot replace it with mean or median. \n",
    "                          #Instead we will replace it with Zeros to represent no signal. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "signaldata = signaldata.replace(np.NaN, 0)  # Replace all NULL values with ZERO\n",
    "signaldata.isnull().any().any()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Visulizing data - Correlation Heatmap and checking number of signals pass and fail"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x864 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(15,12))\n",
    "sns.heatmap(signaldata.corr(),cmap=\"PiYG\"); #The green lines across the heatmap are correlated data which we will need to \n",
    "                                            # filter out. More independent the values are to each other the better it is\n",
    "                                            # for our model. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Visulaisation - Check the number of \"1\" and \"-1\" within the data. This will help us understand if the data is balanced.\n",
    "# That is Pass or Fail"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-1    1463\n",
       " 1     104\n",
       "Name: Pass/Fail, dtype: int64"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "signaldata['Pass/Fail'].value_counts() #Notice that there are 1463 data with pass and 104 fail cases\n",
    "                                       # The following is a unbalanced data set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Visualization of the -1 (pass) and 1 (Fail) data. Visually clear that the following is unbalanced data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAVMAAAE9CAYAAAC2tYFeAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8vihELAAAACXBIWXMAAAsTAAALEwEAmpwYAAATuUlEQVR4nO3df7Ad9Xnf8ffHwmAcmxpGFyzrikpxNaaCxL9uNSSZpG5IgzJNLCYtHbl10SQ0ij3Kz6njoGZa3B+aYSau3Tgx7qgGI1IXVbGdoGaCY6rWJWkB+WJwhYRV1MgRF2R0HZoJsRnZUp7+cRbnVBxJV1ffc8894v2aObO7z35392FG82HP7p69qSokSefmFaNuQJLOB4apJDVgmEpSA4apJDVgmEpSA4apJDVwwagbGJalS5fWypUrR92GpPPMI4888rWqmji5ft6G6cqVK5menh51G5LOM0n+eFDdr/mS1IBhKkkNGKaS1IBhKkkNGKaS1IBhKkkNGKaS1IBhKkkNGKaS1IBhKkkNGKaS1MB5+9v8+Xr7L9096hY0T4/86k2jbkEvY56ZSlIDhqkkNWCYSlIDhqkkNWCYSlIDhqkkNTC0ME1yZ5KjSR4fsO59SSrJ0r7aliQHkxxIcn1f/e1J9nbrPpIkw+pZkuZrmGemdwHrTi4mWQH8beBwX20NsAG4utvm9iRLutUfAzYBq7vPS/YpSaM2tDCtqgeA5was+jDwfqD6auuBHVV1rKoOAQeBtUmWAZdU1YNVVcDdwA3D6lmS5mtBr5kmeSfwdFV96aRVy4Gn+pZnutrybv7kuiQtKgv2c9IkrwZ+BfjhQasH1Oo09VMdYxO9SwJceeWV8+hSkuZnIc9M3wisAr6U5CvAJPDFJK+nd8a5om/sJPBMV58cUB+oqrZV1VRVTU1MTDRuX5JObcHCtKr2VtXlVbWyqlbSC8q3VdVXgV3AhiQXJVlF70bTnqo6Ajyf5NruLv5NwL0L1bMkzdUwH426B3gQeFOSmSQ3n2psVe0DdgL7gc8Cm6vqRLf6vcDH6d2U+j/AfcPqWZLma2jXTKvqXWdYv/Kk5a3A1gHjpoFrmjYnSY35CyhJasAwlaQGDFNJasAwlaQGDFNJasAwlaQGDFNJasAwlaQGDFNJasAwlaQGDFNJasAwlaQGDFNJasAwlaQGDFNJasAwlaQGDFNJasAwlaQGDFNJasAwlaQGDFNJasAwlaQGDFNJasAwlaQGDFNJasAwlaQGDFNJamBoYZrkziRHkzzeV/vVJF9O8r+S/HaS1/Wt25LkYJIDSa7vq789yd5u3UeSZFg9S9J8DfPM9C5g3Um1+4Frquq7gf8NbAFIsgbYAFzdbXN7kiXdNh8DNgGru8/J+5SkkRtamFbVA8BzJ9U+V1XHu8WHgMlufj2wo6qOVdUh4CCwNsky4JKqerCqCrgbuGFYPUvSfI3ymulPAvd188uBp/rWzXS15d38yfWBkmxKMp1kenZ2tnG7knRqIwnTJL8CHAc++WJpwLA6TX2gqtpWVVNVNTUxMXHujUrSHF2w0AdMshH4UeC67qs79M44V/QNmwSe6eqTA+qStKgs6JlpknXALwPvrKpv9K3aBWxIclGSVfRuNO2pqiPA80mu7e7i3wTcu5A9S9JcDO3MNMk9wDuApUlmgFvp3b2/CLi/e8Lpoap6T1XtS7IT2E/v6//mqjrR7eq99J4MuJjeNdb7kKRFZmhhWlXvGlC+4zTjtwJbB9SngWsatiZJzfkLKElqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAaGFqZJ7kxyNMnjfbXLktyf5Mluemnfui1JDiY5kOT6vvrbk+zt1n0kSYbVsyTN1zDPTO8C1p1UuwXYXVWrgd3dMknWABuAq7ttbk+ypNvmY8AmYHX3OXmfkjRyQwvTqnoAeO6k8npgeze/Hbihr76jqo5V1SHgILA2yTLgkqp6sKoKuLtvG0laNBb6mukVVXUEoJte3tWXA0/1jZvpasu7+ZPrkrSoLJYbUIOug9Zp6oN3kmxKMp1kenZ2tllzknQmCx2mz3Zf3emmR7v6DLCib9wk8ExXnxxQH6iqtlXVVFVNTUxMNG1ckk5nocN0F7Cxm98I3NtX35DkoiSr6N1o2tNdCng+ybXdXfyb+raRpEXjgmHtOMk9wDuApUlmgFuB24CdSW4GDgM3AlTVviQ7gf3AcWBzVZ3odvVeek8GXAzc130kaVEZWphW1btOseq6U4zfCmwdUJ8GrmnYmiQ1t1huQEnSWDNMJakBw1SSGjBMJakBw1SSGjBMJakBw1SSGjBMJakBw1SSGjBMJakBw1SSGjBMJakBw1SSGjBMJakBw1SSGjBMJakBw1SSGjBMJakBw1SSGjBMJakBw1SSGjBMJakBw1SSGjBMJamBOYVpkt1zqUnSy9UFp1uZ5FXAq4GlSS4F0q26BHjDkHuTpLFxpjPTnwYeAa7qpi9+7gU+Ot+DJvnFJPuSPJ7kniSvSnJZkvuTPNlNL+0bvyXJwSQHklw/3+NK0rCcNkyr6teqahXwvqr6zqpa1X3eXFW/MZ8DJlkO/BwwVVXXAEuADcAtwO6qWg3s7pZJsqZbfzWwDrg9yZL5HFuShuW0X/NfVFW/nuR7gZX921TV3edw3IuTfIveZYRngC3AO7r124HPA78MrAd2VNUx4FCSg8Ba4MF5HluSmptTmCb5TeCNwGPAia5cwFmHaVU9neSDwGHgBeBzVfW5JFdU1ZFuzJEkl3ebLAce6tvFTFeTpEVjTmEKTAFrqqrO9YDdtdD1wCrgT4HfSvLu020yoDawjySbgE0AV1555bk1KklnYa7PmT4OvL7RMX8IOFRVs1X1LeAzwPcCzyZZBtBNj3bjZ4AVfdtP0rss8BJVta2qpqpqamJiolG7knRmcz0zXQrsT7IHOPZisareOY9jHgauTfJqel/zrwOmga8DG4Hbuum93fhdwH9M8iF6j2OtBvbM47iSNDRzDdMPtDpgVT2c5FPAF4HjwKPANuA1wM4kN9ML3Bu78fuS7AT2d+M3V9WJgTuXpBGZ6938/97yoFV1K3DrSeVj9M5SB43fCmxt2YMktTTXu/nP85c3fS4EXgl8vaouGVZjkjRO5npm+tr+5SQ30HvWU5LEPN8aVVW/A/xg21YkaXzN9Wv+j/ctvoLec6fn/MypJJ0v5no3/8f65o8DX6H34L0kiblfM/2JYTciSeNsri+Hnkzy20mOJnk2yaeTTA67OUkaF3O9AfUJer9EegO9l4z8564mSWLuYTpRVZ+oquPd5y7AH79LUmeuYfq1JO9OsqT7vBv4k2E2JknjZK5h+pPA3we+ChwB/h7gTSlJ6sz10ah/BWysqv8LkOQy4IP0QlaSXvbmemb63S8GKUBVPQe8dTgtSdL4mWuYvuKkvxZ6GXM/q5Wk895cA/HfAP+zew9p0bt+6ivxJKkz119A3Z1kmt7LTQL8eFXtH2pnkjRG5vxVvQtPA1SSBpjXK/gkSf8/w1SSGjBMJakBw1SSGjBMJakBw1SSGjBMJakBw1SSGjBMJakBw1SSGhhJmCZ5XZJPJflykieSfE+Sy5Lcn+TJbtr/lqotSQ4mOZDk+lH0LEmnM6oz018DPltVVwFvBp4AbgF2V9VqYHe3TJI1wAbgamAdcHuSJSPpWpJOYcHDNMklwA8AdwBU1Ter6k+B9cD2bth24IZufj2wo6qOVdUh4CCwdiF7lqQzGcWZ6XcCs8Ankjya5ONJvgO4oqqOAHTTy7vxy4Gn+raf6WqStGiMIkwvAN4GfKyq3gp8ne4r/SlkQK0GDkw2JZlOMj07O3vunUrSHI0iTGeAmap6uFv+FL1wfTbJMoBuerRv/Iq+7SeBZwbtuKq2VdVUVU1NTEwMpXlJGmTBw7Sqvgo8leRNXek6ei+d3gVs7GobgXu7+V3AhiQXJVkFrAb2LGDLknRGo/qjeD8LfDLJhcAfAT9BL9h3JrkZOAzcCFBV+5LspBe4x4HNVXViNG1L0mAjCdOqegyYGrDqulOM34p/wE/SIuYvoCSpAcNUkhowTCWpAcNUkhowTCWpAcNUkhowTCWpAcNUkhowTCWpAcNUkhowTCWpAcNUkhowTCWpAcNUkhowTCWpAcNUkhowTCWpAcNUkhowTCWpAcNUkhowTCWpAcNUkhowTCWpAcNUkhowTCWpAcNUkhoYWZgmWZLk0SS/2y1fluT+JE9200v7xm5JcjDJgSTXj6pnSTqVUZ6Z/jzwRN/yLcDuqloN7O6WSbIG2ABcDawDbk+yZIF7laTTGkmYJpkE/g7w8b7yemB7N78duKGvvqOqjlXVIeAgsHaBWpWkORnVmem/Bd4P/EVf7YqqOgLQTS/v6suBp/rGzXQ1SVo0FjxMk/wocLSqHpnrJgNqdYp9b0oynWR6dnZ23j1K0tkaxZnp9wHvTPIVYAfwg0n+A/BskmUA3fRoN34GWNG3/STwzKAdV9W2qpqqqqmJiYlh9S9JL7HgYVpVW6pqsqpW0rux9F+r6t3ALmBjN2wjcG83vwvYkOSiJKuA1cCeBW5bkk7rglE30Oc2YGeSm4HDwI0AVbUvyU5gP3Ac2FxVJ0bXpiS91EjDtKo+D3y+m/8T4LpTjNsKbF2wxiTpLPkLKElqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAYMU0lqYMHDNMmKJP8tyRNJ9iX5+a5+WZL7kzzZTS/t22ZLkoNJDiS5fqF7lqQzGcWZ6XHgn1TVXweuBTYnWQPcAuyuqtXA7m6Zbt0G4GpgHXB7kiUj6FuSTmnBw7SqjlTVF7v554EngOXAemB7N2w7cEM3vx7YUVXHquoQcBBYu6BNS9IZjPSaaZKVwFuBh4ErquoI9AIXuLwbthx4qm+zma42aH+bkkwnmZ6dnR1a35J0spGFaZLXAJ8GfqGq/ux0QwfUatDAqtpWVVNVNTUxMdGiTUmak5GEaZJX0gvST1bVZ7rys0mWdeuXAUe7+gywom/zSeCZhepVkuZiFHfzA9wBPFFVH+pbtQvY2M1vBO7tq29IclGSVcBqYM9C9StJc3HBCI75fcA/AvYmeayr/VPgNmBnkpuBw8CNAFW1L8lOYD+9JwE2V9WJBe9akk5jwcO0qv6QwddBAa47xTZbga1Da0qSzpG/gJKkBgxTSWrAMJWkBgxTSWrAMJWkBgxTSWrAMJWkBgxTSWrAMJWkBgxTSWrAMJWkBkbxohPpvHD4X37XqFvQObjyn+9tuj/PTCWpAcNUkhowTCWpAcNUkhowTCWpAcNUkhowTCWpAcNUkhowTCWpAcNUkhowTCWpAcNUkhowTCWpAcNUkhoYmzBNsi7JgSQHk9wy6n4kqd9YhGmSJcBHgR8B1gDvSrJmtF1J0l8aizAF1gIHq+qPquqbwA5g/Yh7kqRvG5cwXQ481bc809UkaVEYlz9bkgG1esmgZBOwqVv88yQHhtrV+FkKfG3UTQxLPrhx1C2cb87rfy/cOihW5uSvDiqOS5jOACv6lieBZ04eVFXbgG0L1dS4STJdVVOj7kPjwX8vZ2dcvuZ/AVidZFWSC4ENwK4R9yRJ3zYWZ6ZVdTzJzwC/DywB7qyqfSNuS5K+bSzCFKCqfg/4vVH3Mea8BKKz4b+Xs5Cql9zHkSSdpXG5ZipJi5ph+jKR5KokDyY5luR9o+5Hi1eSO5McTfL4qHsZJ4bpy8dzwM8BHxx1I1r07gLWjbqJcWOYvkxU1dGq+gLwrVH3osWtqh6g9z9fnQXDVJIaMEwlqQHD9DyWZHOSx7rPG0bdj3Q+G5uH9nX2quqj9N4DK2nIfGj/ZSLJ64Fp4BLgL4A/B9ZU1Z+NtDEtOknuAd5B761RzwK3VtUdI21qDBimktSA10wlqQHDVJIaMEwlqQHDVJIaMEwlqQGfM9XYSXIC2Evv3+8TwMaq+kajfW8BDgOrgZ8CZrtVn62qW06xzXuAb1TV3UnuAn63qj7Voh+ND89MNY5eqKq3VNU1wDeB9zTc9w8Dn+vmP9wd5y2nClKAqvp3VXV3wx40hgxTjbs/AP5akh9L8nCSR5P8lyRXACT5m30/qX00yWuTLEvyQFd7PMn3d2MvAS6sqtlBB0ryU0m+kORLST6d5NVd/QO+I1aGqcZWkguAH6H3lf8PgWur6q3ADuD93bD3AZur6i3A9wMvAP8A+P2u9mbgsW7sDwG7+w7xi31BfD3wmar6G1X1ZnqXF24e4n+exozXTDWOLk7yWDf/B8AdwJuA/5RkGXAhcKhb/z+ADyX5JL0wnEnyBeDOJK8EfqeqXtzXOuATfcf5cFV9+2Xa3VnuvwZeB7yG3l/LlQDPTDWeXui7lvmzVfVN4NeB36iq7wJ+GngVQFXdBvxj4GLgoSRXdS8//gHgaeA3k9zU7XctsOc0x70L+JnuGP/ixWNI4Jmpzh9/hV44Amx8sZjkjVW1F9ib5HuAq5K8ADxdVf8+yXcAb0vyCPDlqjpxmmO8FjjSndH+w77jSYapzhsfAH4rydPAQ8Cqrv4LSf4WcALYD9wHbAB+Kcm36L096ybg7wKfPcMx/hnwMPDH9K7Tvrbxf4PGmG+NkoAk9wM3VdWRUfei8WSYSlID3oCSpAYMU0lqwDCVpAYMU0lqwDCVpAYMU0lqwDCVpAb+HwzvJBSfPgNzAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(5,5))\n",
    "sns.countplot (signaldata['Pass/Fail'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                  0         1         2         3         4         5  \\\n",
      "0          1.000000 -0.047782  0.007590  0.009448 -0.000915  0.008706   \n",
      "1         -0.047782  1.000000 -0.030448  0.006021  0.002192 -0.030127   \n",
      "2          0.007590 -0.030448  1.000000  0.323782  0.020438  0.990089   \n",
      "3          0.009448  0.006021  0.323782  1.000000 -0.054015  0.286397   \n",
      "4         -0.000915  0.002192  0.020438 -0.054015  1.000000  0.007041   \n",
      "...             ...       ...       ...       ...       ...       ...   \n",
      "586        0.044745 -0.009219  0.015733  0.038755 -0.043693  0.019435   \n",
      "587        0.005233  0.039479 -0.007090 -0.038371 -0.030930 -0.003077   \n",
      "588        0.003918  0.040500 -0.009122 -0.033648 -0.026046 -0.004919   \n",
      "589        0.021489  0.044464 -0.030434 -0.084449  0.050741 -0.026117   \n",
      "Pass/Fail  0.006149 -0.019672  0.024929 -0.016341 -0.013577  0.025315   \n",
      "\n",
      "                  6         7         8         9  ...       581       582  \\\n",
      "0          0.006129  0.010738 -0.050979  0.009959  ... -0.033622  0.010503   \n",
      "1         -0.031616 -0.025086  0.027609  0.003704  ...  0.043107 -0.017392   \n",
      "2          0.818770  0.747230  0.002600 -0.045731  ...  0.038416 -0.010627   \n",
      "3         -0.119180  0.279646 -0.108217  0.051567  ...  0.000922  0.009788   \n",
      "4         -0.034736 -0.475861 -0.020082  0.053859  ...  0.107783  0.012778   \n",
      "...             ...       ...       ...       ...  ...       ...       ...   \n",
      "586       -0.005877  0.051943  0.017642  0.032423  ... -0.206109 -0.008240   \n",
      "587        0.016362 -0.006335  0.027655  0.057856  ...  0.227096  0.018981   \n",
      "588        0.013832 -0.014288  0.033729  0.059321  ...  0.216292  0.019083   \n",
      "589        0.002246 -0.067263 -0.016895  0.004106  ...  0.431632  0.028502   \n",
      "Pass/Fail  0.030075  0.023590  0.028376 -0.031209  ...  0.003478  0.018736   \n",
      "\n",
      "                583       584       585       586       587       588  \\\n",
      "0          0.019840  0.017889  0.019522  0.044745  0.005233  0.003918   \n",
      "1          0.003809  0.004409  0.003821 -0.009219  0.039479  0.040500   \n",
      "2         -0.004771 -0.003030 -0.004263  0.015733 -0.007090 -0.009122   \n",
      "3          0.022593  0.022361  0.023288  0.038755 -0.038371 -0.033648   \n",
      "4         -0.001323 -0.001605 -0.001636 -0.043693 -0.030930 -0.026046   \n",
      "...             ...       ...       ...       ...       ...       ...   \n",
      "586        0.002391  0.001602  0.002872  1.000000  0.169634  0.165942   \n",
      "587       -0.001809 -0.001696 -0.002122  0.169634  1.000000  0.974332   \n",
      "588       -0.001445 -0.001182 -0.001746  0.165942  0.974332  1.000000   \n",
      "589       -0.002453 -0.002750 -0.003266 -0.484741  0.391503  0.389898   \n",
      "Pass/Fail  0.006131  0.005593  0.005179  0.004448  0.035670  0.031447   \n",
      "\n",
      "                589  Pass/Fail  \n",
      "0          0.021489   0.006149  \n",
      "1          0.044464  -0.019672  \n",
      "2         -0.030434   0.024929  \n",
      "3         -0.084449  -0.016341  \n",
      "4          0.050741  -0.013577  \n",
      "...             ...        ...  \n",
      "586       -0.484741   0.004448  \n",
      "587        0.391503   0.035670  \n",
      "588        0.389898   0.031447  \n",
      "589        1.000000  -0.002472  \n",
      "Pass/Fail -0.002472   1.000000  \n",
      "\n",
      "[591 rows x 591 columns]\n"
     ]
    }
   ],
   "source": [
    "#Notice the heatmap has multiple rows that are completly blank / zero\n",
    "\n",
    "correlation=signaldata.corr()\n",
    "print(correlation)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "# The patterns in the heatmap show rows of blank area. To better check the rows that are blank completly we convert the \n",
    "# correlations to csv and excel.\n",
    "\n",
    "correlation.to_csv(\"correlation.csv\")\n",
    "correlation.to_excel('correlation.xlsx')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Unnamed: 0     object\n",
       "0             float64\n",
       "1             float64\n",
       "2             float64\n",
       "3             float64\n",
       "               ...   \n",
       "586           float64\n",
       "587           float64\n",
       "588           float64\n",
       "589           float64\n",
       "Pass/Fail     float64\n",
       "Length: 592, dtype: object"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Checking if it is possible to drop NaN rows within the correlation dataframe and then sorting out the features. \n",
    "\n",
    "droprow = pd.read_csv(\"correlation.csv\")\n",
    "droprow.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "# However, it is to be noted that the NaN is present in both rows and columns , leading to the whole matrix being dropped.\n",
    "#The idea was to reduce computation used for assesing the values by reducing these rows with NaN\n",
    "# Using droprow.dropna(axis = 0, how = 'all') i was not able to drop the rows ith all NaN values for some reason."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Time</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>...</th>\n",
       "      <th>581</th>\n",
       "      <th>582</th>\n",
       "      <th>583</th>\n",
       "      <th>584</th>\n",
       "      <th>585</th>\n",
       "      <th>586</th>\n",
       "      <th>587</th>\n",
       "      <th>588</th>\n",
       "      <th>589</th>\n",
       "      <th>Pass/Fail</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2008-07-19 11:55:00</td>\n",
       "      <td>3030.93</td>\n",
       "      <td>2564.00</td>\n",
       "      <td>2187.7333</td>\n",
       "      <td>1411.1265</td>\n",
       "      <td>1.3602</td>\n",
       "      <td>100.0</td>\n",
       "      <td>97.6133</td>\n",
       "      <td>0.1242</td>\n",
       "      <td>1.5005</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.5005</td>\n",
       "      <td>0.0118</td>\n",
       "      <td>0.0035</td>\n",
       "      <td>2.3630</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2008-07-19 12:32:00</td>\n",
       "      <td>3095.78</td>\n",
       "      <td>2465.14</td>\n",
       "      <td>2230.4222</td>\n",
       "      <td>1463.6606</td>\n",
       "      <td>0.8294</td>\n",
       "      <td>100.0</td>\n",
       "      <td>102.3433</td>\n",
       "      <td>0.1247</td>\n",
       "      <td>1.4966</td>\n",
       "      <td>...</td>\n",
       "      <td>208.2045</td>\n",
       "      <td>0.5019</td>\n",
       "      <td>0.0223</td>\n",
       "      <td>0.0055</td>\n",
       "      <td>4.4447</td>\n",
       "      <td>0.0096</td>\n",
       "      <td>0.0201</td>\n",
       "      <td>0.006</td>\n",
       "      <td>208.2045</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows Ã— 592 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Time        0        1          2          3       4      5  \\\n",
       "0  2008-07-19 11:55:00  3030.93  2564.00  2187.7333  1411.1265  1.3602  100.0   \n",
       "1  2008-07-19 12:32:00  3095.78  2465.14  2230.4222  1463.6606  0.8294  100.0   \n",
       "\n",
       "          6       7       8  ...       581     582     583     584     585  \\\n",
       "0   97.6133  0.1242  1.5005  ...    0.0000  0.5005  0.0118  0.0035  2.3630   \n",
       "1  102.3433  0.1247  1.4966  ...  208.2045  0.5019  0.0223  0.0055  4.4447   \n",
       "\n",
       "      586     587    588       589  Pass/Fail  \n",
       "0  0.0000  0.0000  0.000    0.0000         -1  \n",
       "1  0.0096  0.0201  0.006  208.2045         -1  \n",
       "\n",
       "[2 rows x 592 columns]"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#In the next section we will try drop the correlations higher numbers.\n",
    "#Before we start, we make a copy of the current data set just to be safe.\n",
    "\n",
    "data = signaldata.copy(deep=True)\n",
    "data.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>...</th>\n",
       "      <th>581</th>\n",
       "      <th>582</th>\n",
       "      <th>583</th>\n",
       "      <th>584</th>\n",
       "      <th>585</th>\n",
       "      <th>586</th>\n",
       "      <th>587</th>\n",
       "      <th>588</th>\n",
       "      <th>589</th>\n",
       "      <th>Pass/Fail</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3030.93</td>\n",
       "      <td>2564.00</td>\n",
       "      <td>2187.7333</td>\n",
       "      <td>1411.1265</td>\n",
       "      <td>1.3602</td>\n",
       "      <td>100.0</td>\n",
       "      <td>97.6133</td>\n",
       "      <td>0.1242</td>\n",
       "      <td>1.5005</td>\n",
       "      <td>0.0162</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.5005</td>\n",
       "      <td>0.0118</td>\n",
       "      <td>0.0035</td>\n",
       "      <td>2.3630</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3095.78</td>\n",
       "      <td>2465.14</td>\n",
       "      <td>2230.4222</td>\n",
       "      <td>1463.6606</td>\n",
       "      <td>0.8294</td>\n",
       "      <td>100.0</td>\n",
       "      <td>102.3433</td>\n",
       "      <td>0.1247</td>\n",
       "      <td>1.4966</td>\n",
       "      <td>-0.0005</td>\n",
       "      <td>...</td>\n",
       "      <td>208.2045</td>\n",
       "      <td>0.5019</td>\n",
       "      <td>0.0223</td>\n",
       "      <td>0.0055</td>\n",
       "      <td>4.4447</td>\n",
       "      <td>0.0096</td>\n",
       "      <td>0.0201</td>\n",
       "      <td>0.006</td>\n",
       "      <td>208.2045</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows Ã— 591 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         0        1          2          3       4      5         6       7  \\\n",
       "0  3030.93  2564.00  2187.7333  1411.1265  1.3602  100.0   97.6133  0.1242   \n",
       "1  3095.78  2465.14  2230.4222  1463.6606  0.8294  100.0  102.3433  0.1247   \n",
       "\n",
       "        8       9  ...       581     582     583     584     585     586  \\\n",
       "0  1.5005  0.0162  ...    0.0000  0.5005  0.0118  0.0035  2.3630  0.0000   \n",
       "1  1.4966 -0.0005  ...  208.2045  0.5019  0.0223  0.0055  4.4447  0.0096   \n",
       "\n",
       "      587    588       589  Pass/Fail  \n",
       "0  0.0000  0.000    0.0000         -1  \n",
       "1  0.0201  0.006  208.2045         -1  \n",
       "\n",
       "[2 rows x 591 columns]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Since \"Time\" column is not relevant to our study, we will drop the column.\n",
    "\n",
    "data = data.drop(columns = ['Time'], axis = 1)\n",
    "data.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Remove the highly collinear features from data\n",
    "def remove_highcollinear_features(x, threshold):   #The X value in the func depicts the dataframe while\n",
    "                                               # Threshold set will remove correlation greater than the set value\n",
    "                                \n",
    "\n",
    "    # Calculate the correlation matrix\n",
    "    corr_matrix = x.corr()\n",
    "    iters = range(len(corr_matrix.columns) - 1)\n",
    "    drop_cols = []\n",
    "\n",
    "    # Iterate through the correlation matrix and compare correlations\n",
    "    for i in iters:\n",
    "        for j in range(i+1):\n",
    "            item = corr_matrix.iloc[j:(j+1), (i+1):(i+2)]\n",
    "            col = item.columns\n",
    "            row = item.index\n",
    "            val = abs(item.values)\n",
    "\n",
    "\n",
    "            # If correlation exceeds the threshold then we filter out\n",
    "            if val >= threshold:\n",
    "                # Print the correlated features and the correlation value\n",
    "                print(col.values[0], \"|\", row.values[0], \"|\", round(val[0][0], 2))\n",
    "                drop_cols.append(col.values[0])\n",
    "\n",
    "    # Drop one of each pair of with above threshold correlation  columns\n",
    "    drops = set(drop_cols)\n",
    "    x = x.drop(columns=drops)\n",
    "\n",
    "    return x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 | 2 | 0.99\n",
      "6 | 2 | 0.82\n",
      "6 | 5 | 0.84\n",
      "7 | 5 | 0.77\n",
      "12 | 11 | 0.83\n",
      "17 | 11 | 0.81\n",
      "18 | 12 | 0.79\n",
      "18 | 17 | 0.9\n",
      "22 | 21 | 0.75\n",
      "26 | 25 | 0.83\n",
      "27 | 25 | 0.98\n",
      "27 | 26 | 0.79\n",
      "30 | 29 | 0.86\n",
      "34 | 32 | 0.88\n",
      "35 | 34 | 0.83\n",
      "37 | 34 | 0.75\n",
      "38 | 37 | 0.97\n",
      "39 | 32 | 0.81\n",
      "39 | 34 | 0.91\n",
      "39 | 37 | 0.86\n",
      "39 | 38 | 0.84\n",
      "43 | 42 | 0.82\n",
      "44 | 42 | 0.82\n",
      "46 | 42 | 0.84\n",
      "46 | 43 | 0.84\n",
      "48 | 44 | 0.77\n",
      "49 | 42 | 1.0\n",
      "49 | 43 | 0.82\n",
      "49 | 44 | 0.82\n",
      "49 | 46 | 0.84\n",
      "50 | 42 | 0.88\n",
      "50 | 43 | 0.9\n",
      "50 | 46 | 0.97\n",
      "50 | 49 | 0.88\n",
      "54 | 53 | 1.0\n",
      "55 | 53 | 0.95\n",
      "55 | 54 | 0.95\n",
      "56 | 53 | 0.98\n",
      "56 | 54 | 0.97\n",
      "56 | 55 | 0.96\n",
      "57 | 53 | 0.97\n",
      "57 | 54 | 0.96\n",
      "57 | 55 | 0.98\n",
      "57 | 56 | 0.99\n",
      "58 | 53 | 0.93\n",
      "58 | 54 | 0.93\n",
      "58 | 55 | 0.92\n",
      "58 | 56 | 0.96\n",
      "58 | 57 | 0.94\n",
      "61 | 60 | 0.88\n",
      "65 | 64 | 0.85\n",
      "66 | 60 | 0.97\n",
      "66 | 61 | 0.84\n",
      "66 | 62 | 0.75\n",
      "68 | 60 | 0.85\n",
      "68 | 61 | 0.87\n",
      "68 | 66 | 0.85\n",
      "69 | 60 | 0.96\n",
      "69 | 61 | 0.92\n",
      "69 | 66 | 0.97\n",
      "69 | 68 | 0.91\n",
      "70 | 60 | 0.97\n",
      "70 | 61 | 0.85\n",
      "70 | 62 | 0.76\n",
      "70 | 66 | 0.99\n",
      "70 | 68 | 0.88\n",
      "70 | 69 | 0.97\n",
      "73 | 72 | 0.98\n",
      "96 | 94 | 0.96\n",
      "98 | 94 | 0.84\n",
      "98 | 96 | 0.87\n",
      "101 | 96 | 0.79\n",
      "101 | 98 | 0.91\n",
      "104 | 99 | 0.99\n",
      "105 | 92 | 0.99\n",
      "106 | 93 | 0.99\n",
      "110 | 109 | 1.0\n",
      "111 | 109 | 1.0\n",
      "111 | 110 | 1.0\n",
      "123 | 121 | 1.0\n",
      "124 | 121 | 1.0\n",
      "124 | 123 | 1.0\n",
      "127 | 122 | 0.97\n",
      "131 | 121 | 1.0\n",
      "131 | 123 | 0.99\n",
      "131 | 124 | 0.99\n",
      "132 | 121 | 0.89\n",
      "132 | 123 | 0.89\n",
      "132 | 124 | 0.89\n",
      "132 | 131 | 0.9\n",
      "133 | 121 | 0.94\n",
      "133 | 123 | 0.94\n",
      "133 | 124 | 0.94\n",
      "133 | 131 | 0.94\n",
      "133 | 132 | 0.95\n",
      "140 | 4 | 1.0\n",
      "147 | 16 | 0.87\n",
      "148 | 16 | 0.96\n",
      "148 | 147 | 0.89\n",
      "152 | 16 | 0.96\n",
      "152 | 147 | 0.9\n",
      "152 | 148 | 0.99\n",
      "154 | 16 | 0.87\n",
      "154 | 147 | 0.8\n",
      "154 | 148 | 0.94\n",
      "154 | 152 | 0.89\n",
      "163 | 159 | 0.76\n",
      "164 | 159 | 0.8\n",
      "164 | 163 | 0.92\n",
      "165 | 159 | 0.79\n",
      "165 | 163 | 0.9\n",
      "165 | 164 | 0.96\n",
      "174 | 172 | 1.0\n",
      "187 | 185 | 0.83\n",
      "196 | 67 | 0.86\n",
      "197 | 67 | 0.86\n",
      "197 | 196 | 0.89\n",
      "199 | 67 | 0.81\n",
      "199 | 196 | 0.94\n",
      "199 | 197 | 0.83\n",
      "202 | 74 | 0.83\n",
      "202 | 201 | 0.8\n",
      "203 | 196 | 0.81\n",
      "203 | 199 | 0.8\n",
      "203 | 200 | 0.76\n",
      "203 | 202 | 0.84\n",
      "204 | 67 | 0.9\n",
      "204 | 196 | 0.87\n",
      "204 | 197 | 0.81\n",
      "204 | 199 | 0.83\n",
      "204 | 203 | 0.79\n",
      "205 | 67 | 0.87\n",
      "205 | 196 | 0.86\n",
      "205 | 197 | 0.84\n",
      "205 | 199 | 0.8\n",
      "205 | 204 | 0.83\n",
      "206 | 74 | 1.0\n",
      "206 | 202 | 0.83\n",
      "207 | 67 | 0.86\n",
      "207 | 196 | 0.92\n",
      "207 | 197 | 0.87\n",
      "207 | 199 | 0.88\n",
      "207 | 203 | 0.86\n",
      "207 | 204 | 0.87\n",
      "207 | 205 | 0.87\n",
      "209 | 74 | 1.0\n",
      "209 | 202 | 0.83\n",
      "209 | 206 | 1.0\n",
      "220 | 85 | 0.97\n",
      "245 | 244 | 0.94\n",
      "246 | 244 | 0.96\n",
      "246 | 245 | 0.98\n",
      "249 | 114 | 0.98\n",
      "252 | 117 | 0.99\n",
      "254 | 119 | 0.8\n",
      "270 | 135 | 0.94\n",
      "271 | 136 | 0.97\n",
      "272 | 137 | 0.98\n",
      "273 | 138 | 0.93\n",
      "274 | 139 | 0.99\n",
      "275 | 4 | 1.0\n",
      "275 | 140 | 1.0\n",
      "277 | 142 | 0.98\n",
      "278 | 143 | 0.92\n",
      "279 | 144 | 0.98\n",
      "280 | 145 | 0.96\n",
      "281 | 146 | 0.95\n",
      "282 | 16 | 0.87\n",
      "282 | 147 | 1.0\n",
      "282 | 148 | 0.89\n",
      "282 | 152 | 0.89\n",
      "282 | 154 | 0.8\n",
      "283 | 16 | 0.96\n",
      "283 | 147 | 0.89\n",
      "283 | 148 | 1.0\n",
      "283 | 152 | 0.99\n",
      "283 | 154 | 0.94\n",
      "283 | 282 | 0.89\n",
      "285 | 150 | 0.97\n",
      "286 | 151 | 0.99\n",
      "287 | 16 | 0.96\n",
      "287 | 147 | 0.9\n",
      "287 | 148 | 0.99\n",
      "287 | 152 | 1.0\n",
      "287 | 154 | 0.89\n",
      "287 | 282 | 0.89\n",
      "287 | 283 | 0.99\n",
      "288 | 153 | 1.0\n",
      "289 | 16 | 0.87\n",
      "289 | 147 | 0.81\n",
      "289 | 148 | 0.94\n",
      "289 | 152 | 0.89\n",
      "289 | 154 | 0.99\n",
      "289 | 282 | 0.81\n",
      "289 | 283 | 0.94\n",
      "289 | 287 | 0.89\n",
      "290 | 155 | 0.95\n",
      "291 | 156 | 0.99\n",
      "292 | 157 | 1.0\n",
      "293 | 158 | 0.99\n",
      "294 | 159 | 0.99\n",
      "294 | 163 | 0.79\n",
      "294 | 164 | 0.83\n",
      "294 | 165 | 0.82\n",
      "295 | 160 | 1.0\n",
      "296 | 161 | 0.99\n",
      "297 | 162 | 0.99\n",
      "298 | 159 | 0.77\n",
      "298 | 163 | 0.99\n",
      "298 | 164 | 0.94\n",
      "298 | 165 | 0.92\n",
      "298 | 294 | 0.81\n",
      "299 | 159 | 0.8\n",
      "299 | 163 | 0.92\n",
      "299 | 164 | 1.0\n",
      "299 | 165 | 0.96\n",
      "299 | 294 | 0.83\n",
      "299 | 298 | 0.95\n",
      "300 | 159 | 0.79\n",
      "300 | 163 | 0.9\n",
      "300 | 164 | 0.97\n",
      "300 | 165 | 1.0\n",
      "300 | 294 | 0.82\n",
      "300 | 298 | 0.93\n",
      "300 | 299 | 0.97\n",
      "301 | 166 | 0.96\n",
      "302 | 167 | 0.98\n",
      "303 | 168 | 0.96\n",
      "304 | 169 | 0.98\n",
      "305 | 170 | 0.96\n",
      "306 | 171 | 0.99\n",
      "307 | 172 | 0.96\n",
      "307 | 174 | 0.96\n",
      "308 | 173 | 0.96\n",
      "309 | 172 | 0.96\n",
      "309 | 174 | 0.96\n",
      "309 | 307 | 1.0\n",
      "310 | 175 | 0.96\n",
      "311 | 176 | 0.98\n",
      "312 | 177 | 1.0\n",
      "316 | 180 | 0.88\n",
      "317 | 181 | 0.96\n",
      "318 | 182 | 0.98\n",
      "319 | 183 | 0.98\n",
      "320 | 184 | 0.99\n",
      "321 | 185 | 0.99\n",
      "321 | 187 | 0.83\n",
      "323 | 185 | 0.82\n",
      "323 | 187 | 0.99\n",
      "323 | 321 | 0.82\n",
      "324 | 188 | 0.98\n",
      "331 | 195 | 0.95\n",
      "332 | 67 | 0.88\n",
      "332 | 196 | 0.96\n",
      "332 | 197 | 0.9\n",
      "332 | 199 | 0.9\n",
      "332 | 204 | 0.82\n",
      "332 | 205 | 0.89\n",
      "332 | 207 | 0.91\n",
      "333 | 67 | 0.87\n",
      "333 | 196 | 0.87\n",
      "333 | 197 | 0.98\n",
      "333 | 199 | 0.8\n",
      "333 | 204 | 0.79\n",
      "333 | 205 | 0.85\n",
      "333 | 207 | 0.87\n",
      "333 | 332 | 0.9\n",
      "334 | 197 | 0.78\n",
      "334 | 198 | 0.99\n",
      "334 | 205 | 0.76\n",
      "334 | 333 | 0.8\n",
      "335 | 67 | 0.85\n",
      "335 | 196 | 0.93\n",
      "335 | 197 | 0.86\n",
      "335 | 199 | 0.96\n",
      "335 | 204 | 0.79\n",
      "335 | 205 | 0.85\n",
      "335 | 207 | 0.9\n",
      "335 | 332 | 0.96\n",
      "335 | 333 | 0.86\n",
      "336 | 67 | 0.87\n",
      "336 | 196 | 0.91\n",
      "336 | 197 | 0.9\n",
      "336 | 199 | 0.88\n",
      "336 | 204 | 0.81\n",
      "336 | 205 | 0.88\n",
      "336 | 207 | 0.9\n",
      "336 | 332 | 0.94\n",
      "336 | 333 | 0.9\n",
      "336 | 334 | 0.76\n",
      "336 | 335 | 0.93\n",
      "337 | 201 | 0.93\n",
      "337 | 202 | 0.81\n",
      "338 | 74 | 0.87\n",
      "338 | 202 | 0.99\n",
      "338 | 203 | 0.86\n",
      "338 | 206 | 0.87\n",
      "338 | 209 | 0.87\n",
      "338 | 337 | 0.76\n",
      "339 | 74 | 0.78\n",
      "339 | 196 | 0.76\n",
      "339 | 199 | 0.76\n",
      "339 | 202 | 0.88\n",
      "339 | 203 | 0.98\n",
      "339 | 204 | 0.75\n",
      "339 | 206 | 0.78\n",
      "339 | 207 | 0.82\n",
      "339 | 209 | 0.78\n",
      "339 | 338 | 0.9\n",
      "340 | 67 | 0.95\n",
      "340 | 196 | 0.85\n",
      "340 | 197 | 0.82\n",
      "340 | 199 | 0.81\n",
      "340 | 204 | 0.99\n",
      "340 | 205 | 0.84\n",
      "340 | 207 | 0.84\n",
      "340 | 332 | 0.82\n",
      "340 | 333 | 0.81\n",
      "340 | 335 | 0.79\n",
      "340 | 336 | 0.82\n",
      "341 | 67 | 0.9\n",
      "341 | 196 | 0.86\n",
      "341 | 197 | 0.85\n",
      "341 | 199 | 0.81\n",
      "341 | 204 | 0.87\n",
      "341 | 205 | 0.99\n",
      "341 | 207 | 0.87\n",
      "341 | 332 | 0.89\n",
      "341 | 333 | 0.86\n",
      "341 | 334 | 0.78\n",
      "341 | 335 | 0.85\n",
      "341 | 336 | 0.89\n",
      "341 | 340 | 0.89\n",
      "342 | 74 | 1.0\n",
      "342 | 202 | 0.83\n",
      "342 | 206 | 1.0\n",
      "342 | 209 | 1.0\n",
      "342 | 338 | 0.87\n",
      "342 | 339 | 0.78\n",
      "343 | 67 | 0.87\n",
      "343 | 196 | 0.9\n",
      "343 | 197 | 0.88\n",
      "343 | 199 | 0.87\n",
      "343 | 203 | 0.8\n",
      "343 | 204 | 0.83\n",
      "343 | 205 | 0.88\n",
      "343 | 207 | 0.98\n",
      "343 | 332 | 0.93\n",
      "343 | 333 | 0.89\n",
      "343 | 335 | 0.92\n",
      "343 | 336 | 0.92\n",
      "343 | 340 | 0.82\n",
      "343 | 341 | 0.88\n",
      "344 | 208 | 0.96\n",
      "346 | 345 | 0.98\n",
      "347 | 74 | 1.0\n",
      "347 | 202 | 0.83\n",
      "347 | 206 | 1.0\n",
      "347 | 209 | 1.0\n",
      "347 | 338 | 0.87\n",
      "347 | 339 | 0.78\n",
      "347 | 342 | 1.0\n",
      "348 | 210 | 0.95\n",
      "349 | 211 | 0.99\n",
      "350 | 212 | 0.99\n",
      "351 | 213 | 1.0\n",
      "352 | 214 | 0.98\n",
      "353 | 215 | 0.98\n",
      "354 | 216 | 0.97\n",
      "355 | 217 | 0.99\n",
      "356 | 218 | 0.95\n",
      "357 | 219 | 0.98\n",
      "358 | 85 | 0.99\n",
      "358 | 220 | 0.99\n",
      "359 | 221 | 0.98\n",
      "360 | 222 | 0.99\n",
      "361 | 223 | 0.98\n",
      "362 | 224 | 1.0\n",
      "363 | 225 | 0.97\n",
      "365 | 227 | 0.97\n",
      "366 | 228 | 0.97\n",
      "368 | 228 | 0.8\n",
      "368 | 366 | 0.77\n",
      "368 | 367 | 0.8\n",
      "376 | 238 | 0.97\n",
      "377 | 239 | 0.96\n",
      "382 | 244 | 1.0\n",
      "382 | 245 | 0.94\n",
      "382 | 246 | 0.96\n",
      "383 | 244 | 0.94\n",
      "383 | 245 | 1.0\n",
      "383 | 246 | 0.98\n",
      "383 | 382 | 0.94\n",
      "384 | 244 | 0.96\n",
      "384 | 245 | 0.98\n",
      "384 | 246 | 1.0\n",
      "384 | 382 | 0.96\n",
      "384 | 383 | 0.98\n",
      "385 | 247 | 0.9\n",
      "386 | 248 | 1.0\n",
      "387 | 114 | 0.98\n",
      "387 | 249 | 1.0\n",
      "388 | 250 | 0.97\n",
      "389 | 251 | 1.0\n",
      "390 | 117 | 0.99\n",
      "390 | 252 | 1.0\n",
      "391 | 253 | 0.99\n",
      "392 | 119 | 0.79\n",
      "392 | 254 | 0.99\n",
      "393 | 255 | 0.99\n",
      "405 | 267 | 0.99\n",
      "406 | 268 | 0.97\n",
      "407 | 269 | 0.96\n",
      "408 | 135 | 1.0\n",
      "408 | 270 | 0.94\n",
      "409 | 136 | 1.0\n",
      "409 | 271 | 0.97\n",
      "410 | 137 | 1.0\n",
      "410 | 272 | 0.97\n",
      "411 | 138 | 1.0\n",
      "411 | 273 | 0.94\n",
      "412 | 139 | 0.85\n",
      "412 | 274 | 0.83\n",
      "413 | 4 | 0.94\n",
      "413 | 140 | 0.94\n",
      "413 | 275 | 0.94\n",
      "415 | 142 | 0.99\n",
      "415 | 277 | 0.97\n",
      "416 | 143 | 1.0\n",
      "416 | 278 | 0.91\n",
      "417 | 144 | 0.99\n",
      "417 | 279 | 0.97\n",
      "420 | 16 | 0.88\n",
      "420 | 147 | 1.0\n",
      "420 | 148 | 0.9\n",
      "420 | 152 | 0.91\n",
      "420 | 154 | 0.81\n",
      "420 | 282 | 1.0\n",
      "420 | 283 | 0.9\n",
      "420 | 287 | 0.91\n",
      "420 | 289 | 0.82\n",
      "421 | 16 | 0.95\n",
      "421 | 147 | 0.89\n",
      "421 | 148 | 1.0\n",
      "421 | 152 | 0.98\n",
      "421 | 154 | 0.95\n",
      "421 | 282 | 0.88\n",
      "421 | 283 | 1.0\n",
      "421 | 287 | 0.98\n",
      "421 | 289 | 0.95\n",
      "421 | 420 | 0.9\n",
      "424 | 151 | 0.98\n",
      "424 | 286 | 0.97\n",
      "425 | 16 | 0.92\n",
      "425 | 147 | 0.87\n",
      "425 | 148 | 0.96\n",
      "425 | 152 | 0.98\n",
      "425 | 154 | 0.86\n",
      "425 | 282 | 0.87\n",
      "425 | 283 | 0.96\n",
      "425 | 287 | 0.97\n",
      "425 | 289 | 0.86\n",
      "425 | 420 | 0.88\n",
      "425 | 421 | 0.95\n",
      "426 | 153 | 1.0\n",
      "426 | 288 | 0.99\n",
      "427 | 16 | 0.89\n",
      "427 | 147 | 0.82\n",
      "427 | 148 | 0.95\n",
      "427 | 152 | 0.91\n",
      "427 | 154 | 1.0\n",
      "427 | 282 | 0.82\n",
      "427 | 283 | 0.95\n",
      "427 | 287 | 0.91\n",
      "427 | 289 | 0.99\n",
      "427 | 420 | 0.83\n",
      "427 | 421 | 0.97\n",
      "427 | 425 | 0.88\n",
      "428 | 155 | 1.0\n",
      "428 | 290 | 0.96\n",
      "429 | 156 | 1.0\n",
      "429 | 291 | 0.99\n",
      "430 | 159 | 0.87\n",
      "430 | 163 | 0.83\n",
      "430 | 164 | 0.88\n",
      "430 | 165 | 0.85\n",
      "430 | 294 | 0.89\n",
      "430 | 298 | 0.84\n",
      "430 | 299 | 0.87\n",
      "430 | 300 | 0.85\n",
      "431 | 160 | 0.81\n",
      "431 | 163 | 0.81\n",
      "431 | 164 | 0.85\n",
      "431 | 165 | 0.81\n",
      "431 | 295 | 0.83\n",
      "431 | 298 | 0.83\n",
      "431 | 299 | 0.85\n",
      "431 | 300 | 0.82\n",
      "431 | 430 | 0.9\n",
      "434 | 26 | 0.77\n",
      "434 | 163 | 0.88\n",
      "434 | 164 | 0.9\n",
      "434 | 165 | 0.86\n",
      "434 | 298 | 0.89\n",
      "434 | 299 | 0.89\n",
      "434 | 300 | 0.86\n",
      "434 | 430 | 0.95\n",
      "434 | 431 | 0.93\n",
      "435 | 26 | 0.77\n",
      "435 | 163 | 0.84\n",
      "435 | 164 | 0.91\n",
      "435 | 165 | 0.87\n",
      "435 | 294 | 0.75\n",
      "435 | 298 | 0.86\n",
      "435 | 299 | 0.9\n",
      "435 | 300 | 0.86\n",
      "435 | 430 | 0.95\n",
      "435 | 431 | 0.93\n",
      "435 | 434 | 0.99\n",
      "436 | 26 | 0.76\n",
      "436 | 163 | 0.84\n",
      "436 | 164 | 0.9\n",
      "436 | 165 | 0.88\n",
      "436 | 294 | 0.75\n",
      "436 | 298 | 0.86\n",
      "436 | 299 | 0.9\n",
      "436 | 300 | 0.87\n",
      "436 | 430 | 0.95\n",
      "436 | 431 | 0.93\n",
      "436 | 434 | 0.99\n",
      "436 | 435 | 1.0\n",
      "437 | 166 | 0.99\n",
      "437 | 301 | 0.95\n",
      "439 | 168 | 0.79\n",
      "439 | 303 | 0.77\n",
      "440 | 169 | 1.0\n",
      "440 | 304 | 0.98\n",
      "441 | 170 | 1.0\n",
      "441 | 305 | 0.95\n",
      "442 | 171 | 0.97\n",
      "442 | 306 | 0.96\n",
      "443 | 172 | 1.0\n",
      "443 | 174 | 1.0\n",
      "443 | 307 | 0.96\n",
      "443 | 309 | 0.96\n",
      "444 | 173 | 0.99\n",
      "444 | 308 | 0.95\n",
      "445 | 172 | 1.0\n",
      "445 | 174 | 1.0\n",
      "445 | 307 | 0.96\n",
      "445 | 309 | 0.96\n",
      "445 | 443 | 0.99\n",
      "446 | 175 | 1.0\n",
      "446 | 310 | 0.96\n",
      "447 | 176 | 1.0\n",
      "447 | 311 | 0.98\n",
      "448 | 177 | 1.0\n",
      "448 | 312 | 1.0\n",
      "452 | 180 | 0.99\n",
      "452 | 316 | 0.86\n",
      "453 | 181 | 1.0\n",
      "453 | 317 | 0.96\n",
      "454 | 182 | 0.99\n",
      "454 | 318 | 0.97\n",
      "455 | 183 | 1.0\n",
      "455 | 319 | 0.98\n",
      "456 | 184 | 0.97\n",
      "456 | 320 | 0.96\n",
      "457 | 185 | 1.0\n",
      "457 | 187 | 0.81\n",
      "457 | 321 | 0.99\n",
      "457 | 323 | 0.8\n",
      "459 | 185 | 0.82\n",
      "459 | 187 | 1.0\n",
      "459 | 321 | 0.82\n",
      "459 | 323 | 0.99\n",
      "459 | 457 | 0.81\n",
      "467 | 195 | 1.0\n",
      "467 | 331 | 0.95\n",
      "469 | 67 | 0.86\n",
      "469 | 196 | 0.89\n",
      "469 | 197 | 1.0\n",
      "469 | 199 | 0.83\n",
      "469 | 204 | 0.81\n",
      "469 | 205 | 0.85\n",
      "469 | 207 | 0.88\n",
      "469 | 332 | 0.91\n",
      "469 | 333 | 0.99\n",
      "469 | 334 | 0.77\n",
      "469 | 335 | 0.87\n",
      "469 | 336 | 0.91\n",
      "469 | 340 | 0.82\n",
      "469 | 341 | 0.86\n",
      "469 | 343 | 0.89\n",
      "470 | 198 | 1.0\n",
      "470 | 334 | 0.98\n",
      "471 | 196 | 0.83\n",
      "471 | 199 | 0.94\n",
      "471 | 203 | 0.8\n",
      "471 | 335 | 0.83\n",
      "471 | 339 | 0.79\n",
      "473 | 201 | 0.87\n",
      "473 | 337 | 0.76\n",
      "474 | 473 | 0.79\n",
      "475 | 196 | 0.78\n",
      "475 | 199 | 0.77\n",
      "475 | 200 | 0.76\n",
      "475 | 202 | 0.86\n",
      "475 | 203 | 1.0\n",
      "475 | 204 | 0.78\n",
      "475 | 207 | 0.83\n",
      "475 | 338 | 0.88\n",
      "475 | 339 | 0.99\n",
      "475 | 343 | 0.76\n",
      "475 | 471 | 0.8\n",
      "477 | 67 | 0.92\n",
      "477 | 196 | 0.88\n",
      "477 | 197 | 0.85\n",
      "477 | 199 | 0.83\n",
      "477 | 204 | 0.87\n",
      "477 | 205 | 0.99\n",
      "477 | 207 | 0.88\n",
      "477 | 332 | 0.91\n",
      "477 | 333 | 0.85\n",
      "477 | 334 | 0.76\n",
      "477 | 335 | 0.87\n",
      "477 | 336 | 0.89\n",
      "477 | 340 | 0.88\n",
      "477 | 341 | 0.99\n",
      "477 | 343 | 0.89\n",
      "477 | 469 | 0.85\n",
      "478 | 74 | 1.0\n",
      "478 | 202 | 0.83\n",
      "478 | 206 | 1.0\n",
      "478 | 209 | 1.0\n",
      "478 | 338 | 0.87\n",
      "478 | 339 | 0.78\n",
      "478 | 342 | 1.0\n",
      "478 | 347 | 1.0\n",
      "479 | 67 | 0.85\n",
      "479 | 196 | 0.91\n",
      "479 | 197 | 0.87\n",
      "479 | 199 | 0.88\n",
      "479 | 200 | 0.75\n",
      "479 | 203 | 0.88\n",
      "479 | 204 | 0.88\n",
      "479 | 205 | 0.86\n",
      "479 | 207 | 1.0\n",
      "479 | 332 | 0.89\n",
      "479 | 333 | 0.86\n",
      "479 | 335 | 0.88\n",
      "479 | 336 | 0.89\n",
      "479 | 339 | 0.84\n",
      "479 | 340 | 0.85\n",
      "479 | 341 | 0.86\n",
      "479 | 343 | 0.97\n",
      "479 | 469 | 0.87\n",
      "479 | 471 | 0.76\n",
      "479 | 475 | 0.86\n",
      "479 | 477 | 0.86\n",
      "480 | 208 | 0.8\n",
      "480 | 344 | 0.78\n",
      "490 | 218 | 0.98\n",
      "490 | 356 | 0.93\n",
      "491 | 219 | 1.0\n",
      "491 | 357 | 0.97\n",
      "492 | 85 | 0.97\n",
      "492 | 220 | 1.0\n",
      "492 | 358 | 0.99\n",
      "493 | 221 | 1.0\n",
      "493 | 359 | 0.98\n",
      "494 | 222 | 1.0\n",
      "494 | 360 | 1.0\n",
      "495 | 223 | 1.0\n",
      "495 | 361 | 0.97\n",
      "496 | 224 | 0.82\n",
      "496 | 362 | 0.82\n",
      "497 | 225 | 0.99\n",
      "497 | 363 | 0.97\n",
      "516 | 244 | 1.0\n",
      "516 | 245 | 0.94\n",
      "516 | 246 | 0.96\n",
      "516 | 382 | 1.0\n",
      "516 | 383 | 0.94\n",
      "516 | 384 | 0.96\n",
      "517 | 244 | 0.95\n",
      "517 | 245 | 1.0\n",
      "517 | 246 | 0.98\n",
      "517 | 382 | 0.95\n",
      "517 | 383 | 1.0\n",
      "517 | 384 | 0.98\n",
      "517 | 516 | 0.95\n",
      "518 | 244 | 0.96\n",
      "518 | 245 | 0.98\n",
      "518 | 246 | 1.0\n",
      "518 | 382 | 0.96\n",
      "518 | 383 | 0.98\n",
      "518 | 384 | 1.0\n",
      "518 | 516 | 0.96\n",
      "518 | 517 | 0.98\n",
      "519 | 247 | 0.97\n",
      "519 | 385 | 0.96\n",
      "520 | 248 | 1.0\n",
      "520 | 386 | 1.0\n",
      "522 | 250 | 0.99\n",
      "522 | 388 | 0.96\n",
      "523 | 251 | 1.0\n",
      "523 | 389 | 1.0\n",
      "524 | 117 | 0.98\n",
      "524 | 252 | 1.0\n",
      "524 | 390 | 1.0\n",
      "525 | 253 | 1.0\n",
      "525 | 391 | 0.99\n",
      "526 | 119 | 0.81\n",
      "526 | 254 | 1.0\n",
      "526 | 392 | 0.99\n",
      "527 | 255 | 1.0\n",
      "527 | 393 | 0.98\n",
      "539 | 267 | 1.0\n",
      "539 | 405 | 0.99\n",
      "540 | 268 | 1.0\n",
      "540 | 406 | 0.97\n",
      "541 | 269 | 0.97\n",
      "541 | 407 | 0.92\n",
      "545 | 543 | 0.99\n",
      "548 | 547 | 0.99\n",
      "550 | 547 | 0.81\n",
      "550 | 548 | 0.81\n",
      "552 | 549 | 1.0\n",
      "553 | 547 | 0.82\n",
      "553 | 548 | 0.82\n",
      "553 | 550 | 0.99\n",
      "554 | 551 | 1.0\n",
      "555 | 549 | 0.89\n",
      "555 | 552 | 0.89\n",
      "556 | 547 | 0.8\n",
      "556 | 548 | 0.8\n",
      "556 | 550 | 1.0\n",
      "556 | 553 | 0.99\n",
      "557 | 551 | 1.0\n",
      "557 | 554 | 1.0\n",
      "560 | 559 | 0.89\n",
      "561 | 559 | 0.98\n",
      "561 | 560 | 0.82\n",
      "563 | 562 | 0.91\n",
      "566 | 564 | 0.99\n",
      "567 | 565 | 0.99\n",
      "568 | 564 | 1.0\n",
      "568 | 566 | 0.99\n",
      "569 | 565 | 0.96\n",
      "569 | 567 | 0.96\n",
      "573 | 572 | 0.79\n",
      "574 | 572 | 0.99\n",
      "574 | 573 | 0.78\n",
      "575 | 572 | 0.78\n",
      "575 | 573 | 0.98\n",
      "575 | 574 | 0.77\n",
      "576 | 572 | 0.99\n",
      "576 | 573 | 0.79\n",
      "576 | 574 | 0.99\n",
      "576 | 575 | 0.78\n",
      "577 | 572 | 0.86\n",
      "577 | 573 | 0.96\n",
      "577 | 574 | 0.85\n",
      "577 | 575 | 0.93\n",
      "577 | 576 | 0.86\n",
      "580 | 579 | 0.99\n",
      "584 | 583 | 0.99\n",
      "585 | 583 | 1.0\n",
      "585 | 584 | 1.0\n",
      "588 | 587 | 0.97\n"
     ]
    }
   ],
   "source": [
    "#Remove columns having more than 75% correlation\n",
    "#Both positive and negative correlations are considered here\n",
    "data = remove_highcollinear_features(data,0.75)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1567, 319)"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape       #Notice the drop in number of columns from 592 to 319 due to the function above."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>11</th>\n",
       "      <th>13</th>\n",
       "      <th>...</th>\n",
       "      <th>572</th>\n",
       "      <th>578</th>\n",
       "      <th>579</th>\n",
       "      <th>581</th>\n",
       "      <th>582</th>\n",
       "      <th>583</th>\n",
       "      <th>586</th>\n",
       "      <th>587</th>\n",
       "      <th>589</th>\n",
       "      <th>Pass/Fail</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3030.93</td>\n",
       "      <td>2564.00</td>\n",
       "      <td>2187.7333</td>\n",
       "      <td>1411.1265</td>\n",
       "      <td>1.3602</td>\n",
       "      <td>1.5005</td>\n",
       "      <td>0.0162</td>\n",
       "      <td>-0.0034</td>\n",
       "      <td>0.9455</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.95</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.5005</td>\n",
       "      <td>0.0118</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3095.78</td>\n",
       "      <td>2465.14</td>\n",
       "      <td>2230.4222</td>\n",
       "      <td>1463.6606</td>\n",
       "      <td>0.8294</td>\n",
       "      <td>1.4966</td>\n",
       "      <td>-0.0005</td>\n",
       "      <td>-0.0148</td>\n",
       "      <td>0.9627</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>5.92</td>\n",
       "      <td>0.0096</td>\n",
       "      <td>0.0201</td>\n",
       "      <td>208.2045</td>\n",
       "      <td>0.5019</td>\n",
       "      <td>0.0223</td>\n",
       "      <td>0.0096</td>\n",
       "      <td>0.0201</td>\n",
       "      <td>208.2045</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2932.61</td>\n",
       "      <td>2559.94</td>\n",
       "      <td>2186.4111</td>\n",
       "      <td>1698.0172</td>\n",
       "      <td>1.5102</td>\n",
       "      <td>1.4436</td>\n",
       "      <td>0.0041</td>\n",
       "      <td>0.0013</td>\n",
       "      <td>0.9615</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>11.21</td>\n",
       "      <td>0.0584</td>\n",
       "      <td>0.0484</td>\n",
       "      <td>82.8602</td>\n",
       "      <td>0.4958</td>\n",
       "      <td>0.0157</td>\n",
       "      <td>0.0584</td>\n",
       "      <td>0.0484</td>\n",
       "      <td>82.8602</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2988.72</td>\n",
       "      <td>2479.90</td>\n",
       "      <td>2199.0333</td>\n",
       "      <td>909.7926</td>\n",
       "      <td>1.3204</td>\n",
       "      <td>1.4882</td>\n",
       "      <td>-0.0124</td>\n",
       "      <td>-0.0033</td>\n",
       "      <td>0.9629</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>9.33</td>\n",
       "      <td>0.0202</td>\n",
       "      <td>0.0149</td>\n",
       "      <td>73.8432</td>\n",
       "      <td>0.4990</td>\n",
       "      <td>0.0103</td>\n",
       "      <td>0.0202</td>\n",
       "      <td>0.0149</td>\n",
       "      <td>73.8432</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3032.24</td>\n",
       "      <td>2502.87</td>\n",
       "      <td>2233.3667</td>\n",
       "      <td>1326.5200</td>\n",
       "      <td>1.5334</td>\n",
       "      <td>1.5031</td>\n",
       "      <td>-0.0031</td>\n",
       "      <td>-0.0072</td>\n",
       "      <td>0.9569</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.83</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.4800</td>\n",
       "      <td>0.4766</td>\n",
       "      <td>0.0202</td>\n",
       "      <td>0.0149</td>\n",
       "      <td>73.8432</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1562</th>\n",
       "      <td>2899.41</td>\n",
       "      <td>2464.36</td>\n",
       "      <td>2179.7333</td>\n",
       "      <td>3085.3781</td>\n",
       "      <td>1.4843</td>\n",
       "      <td>1.3424</td>\n",
       "      <td>-0.0045</td>\n",
       "      <td>-0.0057</td>\n",
       "      <td>0.9579</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.98</td>\n",
       "      <td>0.0068</td>\n",
       "      <td>0.0138</td>\n",
       "      <td>203.1720</td>\n",
       "      <td>0.4988</td>\n",
       "      <td>0.0143</td>\n",
       "      <td>0.0068</td>\n",
       "      <td>0.0138</td>\n",
       "      <td>203.1720</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1563</th>\n",
       "      <td>3052.31</td>\n",
       "      <td>2522.55</td>\n",
       "      <td>2198.5667</td>\n",
       "      <td>1124.6595</td>\n",
       "      <td>0.8763</td>\n",
       "      <td>1.4333</td>\n",
       "      <td>-0.0061</td>\n",
       "      <td>-0.0093</td>\n",
       "      <td>0.9618</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>5.48</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.4975</td>\n",
       "      <td>0.0131</td>\n",
       "      <td>0.0068</td>\n",
       "      <td>0.0138</td>\n",
       "      <td>203.1720</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1564</th>\n",
       "      <td>2978.81</td>\n",
       "      <td>2379.78</td>\n",
       "      <td>2206.3000</td>\n",
       "      <td>1110.4967</td>\n",
       "      <td>0.8236</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>6.49</td>\n",
       "      <td>0.0197</td>\n",
       "      <td>0.0086</td>\n",
       "      <td>43.5231</td>\n",
       "      <td>0.4987</td>\n",
       "      <td>0.0153</td>\n",
       "      <td>0.0197</td>\n",
       "      <td>0.0086</td>\n",
       "      <td>43.5231</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1565</th>\n",
       "      <td>2894.92</td>\n",
       "      <td>2532.01</td>\n",
       "      <td>2177.0333</td>\n",
       "      <td>1183.7287</td>\n",
       "      <td>1.5726</td>\n",
       "      <td>1.4622</td>\n",
       "      <td>-0.0072</td>\n",
       "      <td>0.0032</td>\n",
       "      <td>0.9694</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>9.13</td>\n",
       "      <td>0.0262</td>\n",
       "      <td>0.0245</td>\n",
       "      <td>93.4941</td>\n",
       "      <td>0.5004</td>\n",
       "      <td>0.0178</td>\n",
       "      <td>0.0262</td>\n",
       "      <td>0.0245</td>\n",
       "      <td>93.4941</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1566</th>\n",
       "      <td>2944.92</td>\n",
       "      <td>2450.76</td>\n",
       "      <td>2195.4444</td>\n",
       "      <td>2914.1792</td>\n",
       "      <td>1.5978</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>6.81</td>\n",
       "      <td>0.0117</td>\n",
       "      <td>0.0162</td>\n",
       "      <td>137.7844</td>\n",
       "      <td>0.4987</td>\n",
       "      <td>0.0181</td>\n",
       "      <td>0.0117</td>\n",
       "      <td>0.0162</td>\n",
       "      <td>137.7844</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1567 rows Ã— 319 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            0        1          2          3       4       8       9      10  \\\n",
       "0     3030.93  2564.00  2187.7333  1411.1265  1.3602  1.5005  0.0162 -0.0034   \n",
       "1     3095.78  2465.14  2230.4222  1463.6606  0.8294  1.4966 -0.0005 -0.0148   \n",
       "2     2932.61  2559.94  2186.4111  1698.0172  1.5102  1.4436  0.0041  0.0013   \n",
       "3     2988.72  2479.90  2199.0333   909.7926  1.3204  1.4882 -0.0124 -0.0033   \n",
       "4     3032.24  2502.87  2233.3667  1326.5200  1.5334  1.5031 -0.0031 -0.0072   \n",
       "...       ...      ...        ...        ...     ...     ...     ...     ...   \n",
       "1562  2899.41  2464.36  2179.7333  3085.3781  1.4843  1.3424 -0.0045 -0.0057   \n",
       "1563  3052.31  2522.55  2198.5667  1124.6595  0.8763  1.4333 -0.0061 -0.0093   \n",
       "1564  2978.81  2379.78  2206.3000  1110.4967  0.8236  0.0000  0.0000  0.0000   \n",
       "1565  2894.92  2532.01  2177.0333  1183.7287  1.5726  1.4622 -0.0072  0.0032   \n",
       "1566  2944.92  2450.76  2195.4444  2914.1792  1.5978  0.0000  0.0000  0.0000   \n",
       "\n",
       "          11   13  ...    572     578     579       581     582     583  \\\n",
       "0     0.9455  0.0  ...   8.95  0.0000  0.0000    0.0000  0.5005  0.0118   \n",
       "1     0.9627  0.0  ...   5.92  0.0096  0.0201  208.2045  0.5019  0.0223   \n",
       "2     0.9615  0.0  ...  11.21  0.0584  0.0484   82.8602  0.4958  0.0157   \n",
       "3     0.9629  0.0  ...   9.33  0.0202  0.0149   73.8432  0.4990  0.0103   \n",
       "4     0.9569  0.0  ...   8.83  0.0000  0.0000    0.0000  0.4800  0.4766   \n",
       "...      ...  ...  ...    ...     ...     ...       ...     ...     ...   \n",
       "1562  0.9579  0.0  ...   7.98  0.0068  0.0138  203.1720  0.4988  0.0143   \n",
       "1563  0.9618  0.0  ...   5.48  0.0000  0.0000    0.0000  0.4975  0.0131   \n",
       "1564  0.0000  0.0  ...   6.49  0.0197  0.0086   43.5231  0.4987  0.0153   \n",
       "1565  0.9694  0.0  ...   9.13  0.0262  0.0245   93.4941  0.5004  0.0178   \n",
       "1566  0.0000  0.0  ...   6.81  0.0117  0.0162  137.7844  0.4987  0.0181   \n",
       "\n",
       "         586     587       589  Pass/Fail  \n",
       "0     0.0000  0.0000    0.0000         -1  \n",
       "1     0.0096  0.0201  208.2045         -1  \n",
       "2     0.0584  0.0484   82.8602          1  \n",
       "3     0.0202  0.0149   73.8432         -1  \n",
       "4     0.0202  0.0149   73.8432         -1  \n",
       "...      ...     ...       ...        ...  \n",
       "1562  0.0068  0.0138  203.1720         -1  \n",
       "1563  0.0068  0.0138  203.1720         -1  \n",
       "1564  0.0197  0.0086   43.5231         -1  \n",
       "1565  0.0262  0.0245   93.4941         -1  \n",
       "1566  0.0117  0.0162  137.7844         -1  \n",
       "\n",
       "[1567 rows x 319 columns]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data # Also, it is interesting to note that the column indexes have been skipped due to column deletions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Preparing data for Machine learning models - We will be testing few models. \n",
    "#But first step is to decide the x and y data for running the model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "x Shape: (1567, 306)\n",
      "y Shape: (1567,)\n"
     ]
    }
   ],
   "source": [
    "# separating the dependent and independent data\n",
    "\n",
    "x = data.iloc[:,:306] #As 307 index position is Pass/Fail column or the data we need to determine\n",
    "y = data[\"Pass/Fail\"]\n",
    "\n",
    "print(\"x Shape:\", x.shape)\n",
    "print(\"y Shape:\", y.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "x_train:  (1096, 306)\n",
      "x_test:  (471, 306)\n",
      "y_train:  (1096,)\n",
      "y_test:  (471,)\n"
     ]
    }
   ],
   "source": [
    "# Data Train Test splits\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.3, random_state = 1)\n",
    "\n",
    "# gettiing the shapes\n",
    "print(\"x_train: \", x_train.shape)\n",
    "print(\"x_test: \", x_test.shape)\n",
    "print(\"y_train: \", y_train.shape)\n",
    "print(\"y_test: \", y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Before applying any model standardize the data\n",
    "\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "# creating a standard scaler\n",
    "Standardized_data = StandardScaler()\n",
    "\n",
    "# fitting independent data to the model\n",
    "x_train = Standardized_data.fit_transform(x_train)\n",
    "x_test = Standardized_data.transform(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "#USING Logistic Regression Model , Random Forest and XGBoost"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "#LOGISTIC REGRESSION MODEL"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.metrics import confusion_matrix\n",
    "\n",
    "lr = LogisticRegression(random_state=1)\n",
    "lr.fit(x_train, y_train) \n",
    "y_pred = lr.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "90.44585987261146"
      ]
     },
     "execution_count": 128,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Checking accuracy score in % term.\n",
    "\n",
    "lr.score(x_test,y_test)*100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred = lr.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Actual</th>\n",
       "      <th>Predicted</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1469</th>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>895</th>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>321</th>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1201</th>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>718</th>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148</th>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>336</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>525</th>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>471 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Actual  Predicted\n",
       "60        -1         -1\n",
       "995       -1         -1\n",
       "1469      -1         -1\n",
       "895       -1         -1\n",
       "321        1         -1\n",
       "...      ...        ...\n",
       "1201      -1         -1\n",
       "718       -1         -1\n",
       "148       -1         -1\n",
       "336        1          1\n",
       "525       -1         -1\n",
       "\n",
       "[471 rows x 2 columns]"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Checking side by side comparison of predicted and actual values of Y\n",
    "\n",
    "Predicted_values = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})\n",
    "Predicted_values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[422  17]\n",
      " [ 28   4]]\n"
     ]
    }
   ],
   "source": [
    "# Confusion matrix to find the hit and misses of linear regression model. The output :\n",
    "\n",
    "conf_matric = confusion_matrix(y_test, y_pred)\n",
    "print(conf_matric)\n",
    "\n",
    "\n",
    "#The failures we have 4 observations classified correctly in logistic regression along with 90% accuracy.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy of model = 90.44585987261146 %\n",
      "f1-score of model = 15.09433962264151 %\n",
      "Confusion matrix for logistic regression : \n",
      " [[422  17]\n",
      " [ 28   4]]\n",
      "Detailed classification report for logistic regression is: \n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "          -1       0.94      0.96      0.95       439\n",
      "           1       0.19      0.12      0.15        32\n",
      "\n",
      "    accuracy                           0.90       471\n",
      "   macro avg       0.56      0.54      0.55       471\n",
      "weighted avg       0.89      0.90      0.90       471\n",
      "\n"
     ]
    }
   ],
   "source": [
    "#Consolidated report of the model:\n",
    "\n",
    "from sklearn.metrics import confusion_matrix,f1_score,accuracy_score, classification_report\n",
    "classrep = classification_report(y_test,y_pred)\n",
    "\n",
    "f1_score= f1_score(y_test,y_pred) \n",
    "conf_matrix = confusion_matrix(y_test,y_pred)\n",
    "class_report = classification_report(y_test,y_pred)\n",
    "Accuracy_Score = accuracy_score(y_test,y_pred)\n",
    "\n",
    "print(\"Accuracy of model = {} %\".format(Accuracy_Score*100))\n",
    "print(\"f1-score of model = {} %\".format(f1_score*100))\n",
    "print(\"Confusion matrix for logistic regression : \\n\",conf_matrix)\n",
    "print(\"Detailed classification report for logistic regression is: \\n\",class_report)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1.         0.90625    0.9375     0.96875    0.96875    0.90625\n",
      " 0.9375     0.96875    0.9375     1.         0.9375     0.875\n",
      " 1.         0.9375     0.875      1.         0.9375     0.90322581\n",
      " 0.87096774 0.93548387 0.87096774 0.93548387 0.93548387 0.93548387\n",
      " 0.93548387 1.         0.96774194 0.90322581 0.93548387 0.93548387\n",
      " 0.87096774 0.87096774 0.93548387 0.87096774 0.93548387 0.80645161\n",
      " 0.87096774 0.96774194 0.93548387 1.         0.96774194 0.90322581\n",
      " 0.96774194 0.93548387 0.83870968 0.90322581 0.87096774 1.\n",
      " 1.         1.        ]\n",
      "Accuracy: 93.220% (4.749%)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n"
     ]
    }
   ],
   "source": [
    "# We run K fold to check the accuracy properly as every signal/data is given chance equally against one another.\n",
    "\n",
    "from sklearn.model_selection import KFold\n",
    "from sklearn.model_selection import cross_val_score\n",
    "\n",
    "num_folds = 50\n",
    "seed = 7\n",
    "\n",
    "kfold = KFold(n_splits=num_folds, random_state=seed, shuffle = True)\n",
    "results = cross_val_score(lr, x, y, cv=kfold)\n",
    "print(results)\n",
    "print(\"Accuracy: %.3f%% (%.3f%%)\" % (results.mean()*100.0, results.std()*100.0))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "#RANDOM FOREST "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "\n",
    "modelRF = RandomForestClassifier(n_estimators=100, random_state=1,verbose=0 )\n",
    "modelRF.fit(x_train, y_train)\n",
    "y_pred = modelRF.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [],
   "source": [
    "conf_matrix_RF = confusion_matrix(y_test,y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Confusion matrix of Random Forest model : \n",
      " [[439   0]\n",
      " [ 32   0]]\n"
     ]
    }
   ],
   "source": [
    "print(\"Confusion matrix of Random Forest model : \\n\",conf_matrix_RF)\n",
    "\n",
    "# Although the accuracy of random forest is highest of the lot, the confusion matrix does not show any failure. \n",
    "# Therefore LR is better model overall even though accuracy is higher in Random forest.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy running Random Forest:  93.20594479830149\n"
     ]
    }
   ],
   "source": [
    "print(\"Accuracy running Random Forest: \", modelRF.score(x_test,y_test)*100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1.         0.9375     0.9375     0.96875    0.96875    0.90625\n",
      " 0.9375     0.96875    0.96875    1.         0.9375     0.875\n",
      " 1.         0.9375     0.875      1.         0.9375     0.93548387\n",
      " 0.87096774 0.93548387 0.83870968 0.93548387 0.93548387 0.93548387\n",
      " 0.93548387 1.         1.         0.90322581 0.93548387 0.93548387\n",
      " 0.87096774 0.87096774 0.93548387 0.87096774 0.93548387 0.80645161\n",
      " 0.87096774 0.96774194 0.90322581 1.         0.96774194 0.90322581\n",
      " 0.96774194 0.93548387 0.83870968 0.90322581 0.87096774 1.\n",
      " 1.         1.        ]\n",
      "Accuracy: 93.345% (4.933%)\n"
     ]
    }
   ],
   "source": [
    "num_folds = 50\n",
    "seed = 7\n",
    "\n",
    "kfold = KFold(n_splits=num_folds, random_state = seed, shuffle = True)\n",
    "results = cross_val_score(modelRF, x, y, cv=kfold)\n",
    "print(results)\n",
    "print(\"Accuracy: %.3f%% (%.3f%%)\" % (results.mean()*100.0, results.std()*100.0))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [],
   "source": [
    "# XG Boost Model "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [],
   "source": [
    "#!pip install xgboost"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:49:28] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    }
   ],
   "source": [
    "import xgboost as xgb\n",
    "from xgboost.sklearn import XGBClassifier\n",
    "\n",
    "modelXG = XGBClassifier(random_state=1)\n",
    "modelXG.fit(x_train, y_train)\n",
    "y_pred = modelXG.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "conf_matrix_XG = confusion_matrix(y_test,y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Confusion matrix of XG Boost : \n",
      " [[439   0]\n",
      " [ 32   0]]\n"
     ]
    }
   ],
   "source": [
    "print(\"Confusion matrix of XG Boost : \\n\",conf_matrix_XG)\n",
    "\n",
    "# Although the accuracy of random forest is highest of the lot, the confusion matrix does not show any failure. \n",
    "# Therefore LR is better model overall even though accuracy is higher in this case."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy running XGBoost:  93.20594479830149\n"
     ]
    }
   ],
   "source": [
    "print(\"Accuracy running XGBoost: \", modelXG.score(x_test,y_test)*100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:49:29] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:49:30] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:49:32] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:49:33] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:49:35] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:49:36] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:49:37] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:49:39] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:49:40] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:49:42] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:49:43] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:49:45] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:49:47] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:49:48] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:49:49] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:49:51] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:49:52] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:49:54] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:49:56] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:49:57] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:49:59] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:00] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:02] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:03] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:04] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:06] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:07] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:09] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:10] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:12] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:13] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:14] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:16] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:17] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:18] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:19] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:21] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:22] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:23] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:25] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:26] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:27] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:29] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:30] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:31] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:33] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:34] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:35] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:37] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:50:38] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n",
      "[1.         0.9375     0.9375     0.96875    0.96875    0.90625\n",
      " 0.9375     0.96875    0.96875    1.         0.9375     0.875\n",
      " 1.         0.9375     0.875      1.         0.9375     0.93548387\n",
      " 0.87096774 0.93548387 0.83870968 0.93548387 0.93548387 0.93548387\n",
      " 0.90322581 1.         1.         0.90322581 0.93548387 0.93548387\n",
      " 0.87096774 0.87096774 0.93548387 0.87096774 0.93548387 0.80645161\n",
      " 0.87096774 0.93548387 0.90322581 1.         0.96774194 0.90322581\n",
      " 0.96774194 0.93548387 0.83870968 0.90322581 0.83870968 1.\n",
      " 1.         1.        ]\n",
      "Accuracy: 93.151% (5.026%)\n"
     ]
    }
   ],
   "source": [
    "num_folds = 50\n",
    "seed = 7\n",
    "\n",
    "kfold = KFold(n_splits=num_folds, random_state = seed, shuffle = True)\n",
    "results = cross_val_score(modelXG, x, y, cv=kfold)\n",
    "print(results)\n",
    "print(\"Accuracy: %.3f%% (%.3f%%)\" % (results.mean()*100.0, results.std()*100.0))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GridSearchCV(estimator=RandomForestClassifier(n_estimators=50, random_state=1),\n",
       "             param_grid={'bootstrap': [True, False],\n",
       "                         'criterion': ['gini', 'entropy'],\n",
       "                         'max_depth': [3, None], 'max_features': [1, 3, 10],\n",
       "                         'min_samples_leaf': [1, 3, 10],\n",
       "                         'min_samples_split': [2, 3, 10]})"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "#Using Gridsearch to find the most important parameters.\n",
    "\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "from sklearn.model_selection import RandomizedSearchCV\n",
    "param_grid = {\"max_depth\": [3, None],  \"max_features\": [1, 3, 10], \"min_samples_split\": [2, 3, 10], \n",
    "              \"min_samples_leaf\": [1, 3, 10], \"bootstrap\": [True, False], \"criterion\": [\"gini\", \"entropy\"]}\n",
    "rf = RandomForestClassifier(n_estimators=50,random_state=1)                                                                             \n",
    "grid_search = GridSearchCV(rf, param_grid=param_grid)\n",
    "grid_search.fit(x_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [],
   "source": [
    "best_accuracy = grid_search.best_score_\n",
    "best_parameters = grid_search.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best Accuracy:  93.43088418430885\n",
      "Best Parameter:  {'bootstrap': True, 'criterion': 'gini', 'max_depth': 3, 'max_features': 1, 'min_samples_leaf': 1, 'min_samples_split': 2}\n"
     ]
    }
   ],
   "source": [
    "print(\"Best Accuracy: \", best_accuracy*100)\n",
    "print(\"Best Parameter: \", best_parameters)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Feature importance "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 7200x7200 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "xgb.plot_importance(modelXG, height = 1, grid = True, importance_type = 'cover', show_values = False)\n",
    "\n",
    "plt.rcParams['figure.figsize'] = (150, 150)\n",
    "plt.xlabel('The F-Score for each features')\n",
    "plt.ylabel('Importances')\n",
    "plt.show()\n",
    "\n",
    "# Top features are F12, F59, F153 and F104"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Since the data set is unbalanced we can use oversampling or undersampling to check the accuracy of Machine learning models\n",
    "# We notice that the highest accuracy is that of Random forest model and we will run the same model \n",
    "# with oversampled and undersampled datas."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Undersampling:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of Failed Output:  104\n",
      "Number of Pass Output :  1463\n"
     ]
    }
   ],
   "source": [
    "failed_tests = np.array(data[data['Pass/Fail'] == 1].index)\n",
    "no_failed_tests = len(failed_tests)\n",
    "\n",
    "normal_indices = data[data['Pass/Fail'] == -1]\n",
    "no_normal_indices = len(normal_indices)\n",
    "\n",
    "\n",
    "\n",
    "print(\"Number of Failed Output: \", no_failed_tests)\n",
    "print(\"Number of Pass Output : \", no_normal_indices)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1463\n"
     ]
    }
   ],
   "source": [
    "# Check how many pass observations are there\n",
    "# We have 1,463 such observations\n",
    "\n",
    "normal_indices = data[data['Pass/Fail'] == -1]\n",
    "no_normal_indices = len(normal_indices)\n",
    "\n",
    "print(no_normal_indices)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "104\n"
     ]
    }
   ],
   "source": [
    "# Get 104 random observations from the pass class as well\n",
    "\n",
    "random_normal_indices = np.random.choice(no_normal_indices, size = no_failed_tests, replace = True)\n",
    "random_normal_indices = np.array(random_normal_indices)\n",
    "\n",
    "print(len(random_normal_indices))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "208\n"
     ]
    }
   ],
   "source": [
    "# Balancing the data using undersampling\n",
    "\n",
    "under_sample = np.concatenate([failed_tests, random_normal_indices])\n",
    "print(len(under_sample))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [],
   "source": [
    "## creating the undersample data\n",
    "\n",
    "undersample_data = data.iloc[under_sample, :]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(208, 318)\n",
      "(208, 1)\n"
     ]
    }
   ],
   "source": [
    "# Splitting undersampled dataset for analysis\n",
    "\n",
    "x = undersample_data.iloc[:, undersample_data.columns != 'Pass/Fail'] \n",
    "y = undersample_data.iloc[:, undersample_data.columns == 'Pass/Fail']\n",
    "\n",
    "print(x.shape)\n",
    "print(y.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(145, 318)\n",
      "(145, 1)\n",
      "(63, 318)\n",
      "(63, 1)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "x_train_undsamp, x_test_undsamp, y_train_undsamp, y_test_undsamp = train_test_split(x, y, test_size = 0.3, random_state = 1)\n",
    "\n",
    "print(x_train_undsamp.shape)\n",
    "print(y_train_undsamp.shape)\n",
    "print(x_test_undsamp.shape)\n",
    "print(y_test_undsamp.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Repeating the same method we used for normal data\n",
    "\n",
    "sc = StandardScaler()\n",
    "x_train_undsamp = sc.fit_transform(x_train_undsamp)\n",
    "x_test_undsamp = sc.transform(x_test_undsamp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-75-aa4447c9a141>:4: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
      "  modelRF_undsamp.fit(x_train_undsamp, y_train_undsamp)\n"
     ]
    }
   ],
   "source": [
    "#Random Forest Classification - The following code does not run stating difference in size of matrix\n",
    "\n",
    "modelRF_undsamp = RandomForestClassifier(n_estimators=100, random_state=1,verbose=0 )\n",
    "modelRF_undsamp.fit(x_train_undsamp, y_train_undsamp)\n",
    "y_pred = modelRF_undsamp.predict(x_test_undsamp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Confusion matrix of Random Forest model : \n",
      " [[20  9]\n",
      " [ 9 25]]\n"
     ]
    }
   ],
   "source": [
    "conf_matrix_RF_undsamp = confusion_matrix(y_test_undsamp,y_pred)\n",
    "print(\"Confusion matrix of Random Forest model : \\n\",conf_matrix_RF_undsamp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy running Random Forest Model on Undersampled data:  77.77777777777779\n"
     ]
    }
   ],
   "source": [
    "print(\"Accuracy running Random Forest Model on Undersampled data: \", modelRF_undsamp.score(x_test_undsamp,y_test_undsamp)*100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:52:48] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/xgboost/sklearn.py:888: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n",
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/sklearn/utils/validation.py:63: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
      "  return f(*args, **kwargs)\n"
     ]
    }
   ],
   "source": [
    "#Working with XGBoost model to find the undersampled data confusion matrix and accuracy\n",
    "\n",
    "model_XG_undsamp = XGBClassifier(random_state=1)\n",
    "model_XG_undsamp.fit(x_train_undsamp, y_train_undsamp)\n",
    "y_pred = model_XG_undsamp.predict(x_test_undsamp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Confusion matrix of XGBoost model : \n",
      " [[20  9]\n",
      " [ 9 25]]\n"
     ]
    }
   ],
   "source": [
    "conf_matrix_XG_undsamp = confusion_matrix(y_test_undsamp,y_pred)\n",
    "print(\"Confusion matrix of XGBoost model : \\n\",conf_matrix_XG_undsamp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy running XGBoost:  71.42857142857143\n"
     ]
    }
   ],
   "source": [
    "print(\"Accuracy running XGBoost: \", model_XG_undsamp.score(x_test_undsamp,y_test_undsamp)*100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Oversampling using SMOTE:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [],
   "source": [
    "#!pip install imblearn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [],
   "source": [
    "#!pip install delayed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "x Shape: (1567, 306)\n",
      "y Shape: (1567,)\n"
     ]
    }
   ],
   "source": [
    "x = data.iloc[:,:306] #As 307 index position is Pass/Fail column or the data we need to determine\n",
    "y = data[\"Pass/Fail\"]\n",
    "\n",
    "print(\"x Shape:\", x.shape)\n",
    "print(\"y Shape:\", y.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#!pip install imblearn -U\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#!conda install -c conda-forge imbalanced-learn # Not able to get SMOTE running."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "x_resample, y_resample  = SMOTE(random_state=1).fit_sample(x, y.values.ravel())\n",
    "\n",
    "print(x_resample.shape)\n",
    "print(y_resample.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "x_train_os, x_test_os, y_train_os, y_test_os = train_test_split(x, y, test_size = 0.3, random_state = 1)\n",
    "\n",
    "print(x_train_os.shape)\n",
    "print(y_train_os.shape)\n",
    "print(x_test_os.shape)\n",
    "print(y_test_os.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "sc = StandardScaler()\n",
    "x_train_os = sc.fit_transform(x_train_os)\n",
    "x_test_os = sc.transform(x_test_os)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import xgboost as xgb\n",
    "from xgboost.sklearn import XGBClassifier\n",
    "\n",
    "model = XGBClassifier(random_state=1)\n",
    "model.fit(x_train_os, y_train_os)\n",
    "y_pred = model.predict(x_test_os)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "conf_matrix_XG_oversamp = confusion_matrix(y_test_os,y_pred)\n",
    "print(\"Confusion matrix of XGBoost model : \\n\",conf_matrix_XG_oversamp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#NOT ABLE TO RUN SMOTE as per the tutorial sample codes given in Great learning on Macbook. Getting an error"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Using PCA dimensionality reduction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/monojitroy/opt/anaconda3/lib/python3.8/site-packages/scipy/stats/stats.py:2500: RuntimeWarning: invalid value encountered in true_divide\n",
      "  return (a - mns) / sstd\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>11</th>\n",
       "      <th>13</th>\n",
       "      <th>...</th>\n",
       "      <th>543</th>\n",
       "      <th>544</th>\n",
       "      <th>546</th>\n",
       "      <th>547</th>\n",
       "      <th>549</th>\n",
       "      <th>551</th>\n",
       "      <th>558</th>\n",
       "      <th>559</th>\n",
       "      <th>562</th>\n",
       "      <th>564</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.139998</td>\n",
       "      <td>0.429208</td>\n",
       "      <td>0.032735</td>\n",
       "      <td>0.059342</td>\n",
       "      <td>-0.049911</td>\n",
       "      <td>0.436850</td>\n",
       "      <td>1.128343</td>\n",
       "      <td>-0.381523</td>\n",
       "      <td>-0.481360</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.422665</td>\n",
       "      <td>0.304675</td>\n",
       "      <td>0.370338</td>\n",
       "      <td>0.392696</td>\n",
       "      <td>-0.195969</td>\n",
       "      <td>-0.186148</td>\n",
       "      <td>0.457482</td>\n",
       "      <td>0.560984</td>\n",
       "      <td>-2.171890</td>\n",
       "      <td>-1.556019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.464020</td>\n",
       "      <td>-0.105874</td>\n",
       "      <td>0.236852</td>\n",
       "      <td>0.173847</td>\n",
       "      <td>-0.059375</td>\n",
       "      <td>0.393723</td>\n",
       "      <td>0.022511</td>\n",
       "      <td>-1.608226</td>\n",
       "      <td>-0.011526</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.422665</td>\n",
       "      <td>0.304675</td>\n",
       "      <td>0.924510</td>\n",
       "      <td>0.480768</td>\n",
       "      <td>0.250748</td>\n",
       "      <td>0.229177</td>\n",
       "      <td>-0.354020</td>\n",
       "      <td>-0.749637</td>\n",
       "      <td>-2.171890</td>\n",
       "      <td>-1.556019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-0.351256</td>\n",
       "      <td>0.407233</td>\n",
       "      <td>0.026413</td>\n",
       "      <td>0.684661</td>\n",
       "      <td>-0.047236</td>\n",
       "      <td>-0.192349</td>\n",
       "      <td>0.327111</td>\n",
       "      <td>0.124224</td>\n",
       "      <td>-0.044305</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.422665</td>\n",
       "      <td>0.304675</td>\n",
       "      <td>-0.138891</td>\n",
       "      <td>0.496334</td>\n",
       "      <td>-0.558597</td>\n",
       "      <td>-0.133288</td>\n",
       "      <td>5.803114</td>\n",
       "      <td>0.229853</td>\n",
       "      <td>0.501601</td>\n",
       "      <td>-1.234416</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-0.070903</td>\n",
       "      <td>-0.025985</td>\n",
       "      <td>0.086766</td>\n",
       "      <td>-1.033387</td>\n",
       "      <td>-0.050620</td>\n",
       "      <td>0.300837</td>\n",
       "      <td>-0.765478</td>\n",
       "      <td>-0.370762</td>\n",
       "      <td>-0.006063</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.422665</td>\n",
       "      <td>0.304675</td>\n",
       "      <td>0.567250</td>\n",
       "      <td>0.241239</td>\n",
       "      <td>2.003650</td>\n",
       "      <td>28.924325</td>\n",
       "      <td>1.907900</td>\n",
       "      <td>2.002170</td>\n",
       "      <td>0.513254</td>\n",
       "      <td>0.584104</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.146544</td>\n",
       "      <td>0.098340</td>\n",
       "      <td>0.250931</td>\n",
       "      <td>-0.125070</td>\n",
       "      <td>-0.046823</td>\n",
       "      <td>0.465600</td>\n",
       "      <td>-0.149655</td>\n",
       "      <td>-0.790424</td>\n",
       "      <td>-0.169959</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.422665</td>\n",
       "      <td>0.304675</td>\n",
       "      <td>1.135896</td>\n",
       "      <td>0.421618</td>\n",
       "      <td>0.733095</td>\n",
       "      <td>0.720015</td>\n",
       "      <td>-0.189434</td>\n",
       "      <td>-0.545597</td>\n",
       "      <td>-2.171890</td>\n",
       "      <td>-1.556019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>-0.283104</td>\n",
       "      <td>-0.280698</td>\n",
       "      <td>0.250931</td>\n",
       "      <td>-0.125070</td>\n",
       "      <td>-0.046823</td>\n",
       "      <td>0.748684</td>\n",
       "      <td>1.161452</td>\n",
       "      <td>0.576167</td>\n",
       "      <td>0.185149</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.422665</td>\n",
       "      <td>0.304675</td>\n",
       "      <td>0.768733</td>\n",
       "      <td>0.503565</td>\n",
       "      <td>0.833036</td>\n",
       "      <td>0.470820</td>\n",
       "      <td>-0.542609</td>\n",
       "      <td>-0.176240</td>\n",
       "      <td>0.370882</td>\n",
       "      <td>-0.167278</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.136701</td>\n",
       "      <td>-0.295420</td>\n",
       "      <td>0.236852</td>\n",
       "      <td>0.173847</td>\n",
       "      <td>-0.059375</td>\n",
       "      <td>1.333650</td>\n",
       "      <td>-1.732254</td>\n",
       "      <td>1.114195</td>\n",
       "      <td>-0.109863</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.422665</td>\n",
       "      <td>0.304675</td>\n",
       "      <td>-0.689445</td>\n",
       "      <td>0.451193</td>\n",
       "      <td>-0.610379</td>\n",
       "      <td>-0.118186</td>\n",
       "      <td>-0.932359</td>\n",
       "      <td>0.715875</td>\n",
       "      <td>-2.171890</td>\n",
       "      <td>-1.556019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.279650</td>\n",
       "      <td>1.111997</td>\n",
       "      <td>0.325203</td>\n",
       "      <td>-0.827026</td>\n",
       "      <td>-0.060106</td>\n",
       "      <td>0.600507</td>\n",
       "      <td>1.095234</td>\n",
       "      <td>0.059660</td>\n",
       "      <td>-0.410339</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.422665</td>\n",
       "      <td>0.304675</td>\n",
       "      <td>-0.475584</td>\n",
       "      <td>0.476227</td>\n",
       "      <td>-0.162605</td>\n",
       "      <td>-0.201251</td>\n",
       "      <td>-0.138001</td>\n",
       "      <td>0.485027</td>\n",
       "      <td>0.481840</td>\n",
       "      <td>0.718593</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>-0.176029</td>\n",
       "      <td>0.626603</td>\n",
       "      <td>0.325203</td>\n",
       "      <td>-0.827026</td>\n",
       "      <td>-0.060106</td>\n",
       "      <td>0.827196</td>\n",
       "      <td>0.790634</td>\n",
       "      <td>-0.725860</td>\n",
       "      <td>-0.374828</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.422665</td>\n",
       "      <td>0.304675</td>\n",
       "      <td>-0.373509</td>\n",
       "      <td>0.478571</td>\n",
       "      <td>-0.311461</td>\n",
       "      <td>0.251831</td>\n",
       "      <td>-0.334590</td>\n",
       "      <td>-0.949208</td>\n",
       "      <td>0.482781</td>\n",
       "      <td>0.280043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.065950</td>\n",
       "      <td>-0.304892</td>\n",
       "      <td>0.325203</td>\n",
       "      <td>-0.827026</td>\n",
       "      <td>-0.060106</td>\n",
       "      <td>0.852629</td>\n",
       "      <td>1.108478</td>\n",
       "      <td>0.511604</td>\n",
       "      <td>-0.522334</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.422665</td>\n",
       "      <td>0.304675</td>\n",
       "      <td>0.075732</td>\n",
       "      <td>0.398914</td>\n",
       "      <td>0.281848</td>\n",
       "      <td>0.063047</td>\n",
       "      <td>-0.443171</td>\n",
       "      <td>-0.620560</td>\n",
       "      <td>0.483001</td>\n",
       "      <td>0.502242</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows Ã— 306 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          0         1         2         3         4         8         9  \\\n",
       "0  0.139998  0.429208  0.032735  0.059342 -0.049911  0.436850  1.128343   \n",
       "1  0.464020 -0.105874  0.236852  0.173847 -0.059375  0.393723  0.022511   \n",
       "2 -0.351256  0.407233  0.026413  0.684661 -0.047236 -0.192349  0.327111   \n",
       "3 -0.070903 -0.025985  0.086766 -1.033387 -0.050620  0.300837 -0.765478   \n",
       "4  0.146544  0.098340  0.250931 -0.125070 -0.046823  0.465600 -0.149655   \n",
       "5 -0.283104 -0.280698  0.250931 -0.125070 -0.046823  0.748684  1.161452   \n",
       "6  0.136701 -0.295420  0.236852  0.173847 -0.059375  1.333650 -1.732254   \n",
       "7  0.279650  1.111997  0.325203 -0.827026 -0.060106  0.600507  1.095234   \n",
       "8 -0.176029  0.626603  0.325203 -0.827026 -0.060106  0.827196  0.790634   \n",
       "9  0.065950 -0.304892  0.325203 -0.827026 -0.060106  0.852629  1.108478   \n",
       "\n",
       "         10        11  13  ...       543       544       546       547  \\\n",
       "0 -0.381523 -0.481360 NaN  ... -0.422665  0.304675  0.370338  0.392696   \n",
       "1 -1.608226 -0.011526 NaN  ... -0.422665  0.304675  0.924510  0.480768   \n",
       "2  0.124224 -0.044305 NaN  ... -0.422665  0.304675 -0.138891  0.496334   \n",
       "3 -0.370762 -0.006063 NaN  ... -0.422665  0.304675  0.567250  0.241239   \n",
       "4 -0.790424 -0.169959 NaN  ... -0.422665  0.304675  1.135896  0.421618   \n",
       "5  0.576167  0.185149 NaN  ... -0.422665  0.304675  0.768733  0.503565   \n",
       "6  1.114195 -0.109863 NaN  ... -0.422665  0.304675 -0.689445  0.451193   \n",
       "7  0.059660 -0.410339 NaN  ... -0.422665  0.304675 -0.475584  0.476227   \n",
       "8 -0.725860 -0.374828 NaN  ... -0.422665  0.304675 -0.373509  0.478571   \n",
       "9  0.511604 -0.522334 NaN  ... -0.422665  0.304675  0.075732  0.398914   \n",
       "\n",
       "        549        551       558       559       562       564  \n",
       "0 -0.195969  -0.186148  0.457482  0.560984 -2.171890 -1.556019  \n",
       "1  0.250748   0.229177 -0.354020 -0.749637 -2.171890 -1.556019  \n",
       "2 -0.558597  -0.133288  5.803114  0.229853  0.501601 -1.234416  \n",
       "3  2.003650  28.924325  1.907900  2.002170  0.513254  0.584104  \n",
       "4  0.733095   0.720015 -0.189434 -0.545597 -2.171890 -1.556019  \n",
       "5  0.833036   0.470820 -0.542609 -0.176240  0.370882 -0.167278  \n",
       "6 -0.610379  -0.118186 -0.932359  0.715875 -2.171890 -1.556019  \n",
       "7 -0.162605  -0.201251 -0.138001  0.485027  0.481840  0.718593  \n",
       "8 -0.311461   0.251831 -0.334590 -0.949208  0.482781  0.280043  \n",
       "9  0.281848   0.063047 -0.443171 -0.620560  0.483001  0.502242  \n",
       "\n",
       "[10 rows x 306 columns]"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from scipy.stats import zscore\n",
    "data_new=data.iloc[:,:306].apply(zscore)\n",
    "data_new.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_new.isnull().any().any()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_new = data_new.replace(np.NaN, 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "shape of x: (1567, 306)\n",
      "shape of y: (1567,)\n"
     ]
    }
   ],
   "source": [
    "x = data_new.iloc[:,:306]\n",
    "y = data[\"Pass/Fail\"]\n",
    "\n",
    "# getting the shapes of new data sets x and y\n",
    "print(\"shape of x:\", x.shape)\n",
    "print(\"shape of y:\", y.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Covariance Matrix \n",
      "%s [[ 1.00063857 -0.04781282  0.00759455 ...  0.0311631   0.00880094\n",
      "   0.02876457]\n",
      " [-0.04781282  1.00063857 -0.03046719 ... -0.01273309  0.01456282\n",
      "  -0.00271826]\n",
      " [ 0.00759455 -0.03046719  1.00063857 ...  0.01211971 -0.04545426\n",
      "  -0.05626131]\n",
      " ...\n",
      " [ 0.0311631  -0.01273309  0.01211971 ...  1.00063857  0.03547548\n",
      "   0.02021197]\n",
      " [ 0.00880094  0.01456282 -0.04545426 ...  0.03547548  1.00063857\n",
      "   0.71856024]\n",
      " [ 0.02876457 -0.00271826 -0.05626131 ...  0.02021197  0.71856024\n",
      "   1.00063857]]\n"
     ]
    }
   ],
   "source": [
    "# PCA: 1.Create covariance matrix:\n",
    "\n",
    "cov_matrix = np.cov(x.T)\n",
    "print('Covariance Matrix \\n%s', cov_matrix)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Eigen Vectors \n",
      "%s [[ 0.02479619  0.00374164 -0.00836623 ...  0.          0.\n",
      "   0.        ]\n",
      " [ 0.00230483 -0.00053327 -0.01166628 ...  0.          0.\n",
      "   0.        ]\n",
      " [-0.0291037  -0.00034062  0.00110709 ...  0.          0.\n",
      "   0.        ]\n",
      " ...\n",
      " [ 0.01275523  0.0149963   0.01180947 ...  0.          0.\n",
      "   0.        ]\n",
      " [ 0.17062893 -0.00327942  0.0061189  ...  0.          0.\n",
      "   0.        ]\n",
      " [ 0.128439   -0.01385753 -0.00077358 ...  0.          0.\n",
      "   0.        ]]\n",
      "\n",
      " Eigen Values \n",
      "%s [8.11161797 4.46464228 4.36326566 3.99079771 3.48006703 3.20502897\n",
      " 3.09159619 2.88520729 2.84287694 2.63967829 2.61231248 2.55051741\n",
      " 2.48084735 2.33395404 2.29225412 2.23756337 2.20492903 2.10405887\n",
      " 2.07528302 2.05706471 1.987325   1.97283383 1.95576971 1.92738503\n",
      " 1.8861566  1.8512978  1.86315296 1.69345287 1.79901097 1.76586344\n",
      " 1.78714779 1.6531008  1.63202318 1.62271856 1.59324319 1.58943391\n",
      " 1.57419071 1.5268055  1.53332433 1.48322853 1.45627129 1.38954199\n",
      " 1.41312993 1.42962367 1.4250515  1.34036104 1.33017314 1.31378812\n",
      " 1.30765903 1.28691185 1.27667224 1.25237681 1.23881549 1.21216322\n",
      " 1.18621055 1.18822789 0.01297326 0.02725994 0.02918631 0.0469597\n",
      " 1.17409494 1.09907167 1.15966942 1.14647096 1.13674803 1.12004968\n",
      " 1.12524205 0.08024616 0.08866214 0.09746859 1.07902483 1.07254156\n",
      " 1.06175608 1.05404934 0.10131413 0.11149124 1.04160312 1.032277\n",
      " 1.01349527 0.1242394  0.12637628 0.98826876 1.00129307 1.00343151\n",
      " 0.13782739 0.14880979 0.9783005  0.98658602 0.15237957 0.16051668\n",
      " 0.9576846  0.94970014 0.16875809 0.17229663 0.93823023 0.92532889\n",
      " 0.91021039 0.91897504 0.90053205 0.88946924 0.87970367 0.8503317\n",
      " 0.86971828 0.86306031 0.17907364 0.18569701 0.19231866 0.19600914\n",
      " 0.19742238 0.20578226 0.22599764 0.22027093 0.22038261 0.84540846\n",
      " 0.23204999 0.23607861 0.24020374 0.83429517 0.82798701 0.82130628\n",
      " 0.2517027  0.80939702 0.79046689 0.79830856 0.80112628 0.76704497\n",
      " 0.26944103 0.25831208 0.25991191 0.25893121 0.27741721 0.28272473\n",
      " 0.28591762 0.29698469 0.29994138 0.74644208 0.74913018 0.76146256\n",
      " 0.31039519 0.63409612 0.64380686 0.65109434 0.65765543 0.33869687\n",
      " 0.33671314 0.61451742 0.61054414 0.67310885 0.72307317 0.32067708\n",
      " 0.34629164 0.58168284 0.59220039 0.32120754 0.35726373 0.67994781\n",
      " 0.57165435 0.39141377 0.39479668 0.40341243 0.70000087 0.56311737\n",
      " 0.71661363 0.69003786 0.7074314  0.31313367 0.53982388 0.37073001\n",
      " 0.42199596 0.4251638  0.46029889 0.45425515 0.43766339 0.44244036\n",
      " 0.69246087 0.52750551 0.48985741 0.37502772 0.75983362 0.59886698\n",
      " 0.41286569 0.4817151  0.47677824 0.46952549 0.49956861 0.50466187\n",
      " 0.51727832 0.55592073 0.52521821 0.51362772 0.72022898 0.38212469\n",
      " 0.36617962 0.35104559 0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n"
     ]
    }
   ],
   "source": [
    "# PCA: 2. Get eigen values and eigen vector for the above cov_matirx\n",
    "eig_vals, eig_vecs = np.linalg.eig(cov_matrix)\n",
    "print('Eigen Vectors \\n%s', eig_vecs)\n",
    "print('\\n Eigen Values \\n%s', eig_vals)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cumulative Variance Explained [  4.17857806   6.47847142   8.72614214  10.78194159  12.57464581\n",
      "  14.2256683   15.8182576   17.30452877  18.76899409  20.12878468\n",
      "  21.47447819  22.78833889  24.06631011  25.26861145  26.44943171\n",
      "  27.60207884  28.73791489  29.82178918  30.89084004  31.950506\n",
      "  32.9742466   33.99052229  34.99800766  35.99087108  36.9624963\n",
      "  37.92227154  38.87593978  39.80267323  40.72329555  41.63295356\n",
      "  42.50531035  43.35688038  44.19759259  45.03351166  45.85424694\n",
      "  46.67301992  47.48394061  48.27380959  49.06032049  49.82438337\n",
      "  50.57455964  51.31100878  52.04510263  52.77305527  53.48885694\n",
      "  54.17932379  54.86454249  55.54132069  56.21494158  56.87787487\n",
      "  57.53553339  58.18067648  58.81883365  59.44326132  60.05535905\n",
      "  60.66641758  61.27123494  61.86862121  62.45920849  63.04478716\n",
      "  63.62443869  64.20141544  64.76758569  65.32342911  65.87593277\n",
      "  66.42288046  66.96585813  67.50242432  68.0341863   68.55627316\n",
      "  69.07317581  69.58897689  70.09806868  70.60629364  71.11025044\n",
      "  71.60358726  72.09281101  72.57612621  73.05279548  73.52619166\n",
      "  73.99507286  74.45896841  74.91716512  75.37033124  75.81835354\n",
      "  76.26294609  76.70098168  77.13648114  77.56625576  77.99278082\n",
      "  78.4158644   78.83281311  79.24550127  79.65673793  80.06393507\n",
      "  80.45906675  80.85132275  81.24273962  81.62864277  82.01316119\n",
      "  82.38564146  82.75665659  83.12580933  83.49023198  83.85082691\n",
      "  84.20753772  84.56300035  84.91326524  85.26000715  85.59878846\n",
      "  85.93418992  86.26583734  86.59248243  86.90904184  87.22355448\n",
      "  87.5320518   87.83711493  88.1367601   88.43123924  88.72132069\n",
      "  89.0076949   89.28577705  89.55751359  89.82807185  90.09454\n",
      "  90.3591276   90.61909658  90.87644184  91.12878452  91.37693281\n",
      "  91.62253796  91.86440696  92.10152301  92.33552572  92.56344223\n",
      "  92.78889794  93.00791468  93.22529955  93.43798111  93.64579296\n",
      "  93.84916653  94.05079745  94.24764324  94.44083314  94.63180913\n",
      "  94.82044105  95.00448009  95.18531595  95.36370288  95.53817748\n",
      "  95.7116302   95.87709544  96.04228741  96.20359352  96.36348893\n",
      "  96.51799923  96.67098643  96.81827259  96.96391399  97.10682129\n",
      "  97.24561979  97.3795095   97.51289402  97.64595961  97.77562047\n",
      "  97.89935782  98.02097016  98.14050723  98.25692652  98.37045331\n",
      "  98.48392256  98.5899282   98.69162738  98.79259854  98.8916686\n",
      "  98.98732762  99.07957472  99.16833073  99.25526393  99.33795168\n",
      "  99.41644772  99.49310485  99.56410456  99.6292054   99.69320546\n",
      "  99.75063849  99.80282894  99.85303842  99.89871139  99.940049\n",
      "  99.96423958  99.97927447  99.99331702 100.         100.\n",
      " 100.         100.         100.         100.         100.\n",
      " 100.         100.         100.         100.         100.\n",
      " 100.         100.         100.         100.         100.\n",
      " 100.         100.         100.         100.         100.\n",
      " 100.         100.         100.         100.         100.\n",
      " 100.         100.         100.         100.         100.\n",
      " 100.         100.         100.         100.         100.\n",
      " 100.         100.         100.         100.         100.\n",
      " 100.         100.         100.         100.         100.\n",
      " 100.         100.         100.         100.         100.\n",
      " 100.         100.         100.         100.         100.\n",
      " 100.         100.         100.         100.         100.\n",
      " 100.         100.         100.         100.         100.\n",
      " 100.         100.         100.         100.         100.\n",
      " 100.         100.         100.         100.         100.\n",
      " 100.         100.         100.         100.         100.\n",
      " 100.         100.         100.         100.         100.\n",
      " 100.         100.         100.         100.         100.\n",
      " 100.         100.         100.         100.         100.\n",
      " 100.         100.         100.         100.         100.\n",
      " 100.         100.         100.         100.         100.\n",
      " 100.         100.         100.         100.         100.\n",
      " 100.        ]\n"
     ]
    }
   ],
   "source": [
    "tot = sum(eig_vals)\n",
    "var_exp = [( i /tot ) * 100 for i in sorted(eig_vals, reverse=True)]\n",
    "cum_var_exp = np.cumsum(var_exp)\n",
    "print(\"Cumulative Variance Explained\", cum_var_exp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "plt.plot(var_exp);\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Ploting we see that PCA is not giving us much benefit\n",
    "plt.figure(figsize=(10 , 5))\n",
    "plt.bar(range(1, eig_vals.size + 1), var_exp, alpha = 0.5, align = 'center', label = 'Individual explained variance')\n",
    "plt.step(range(1, eig_vals.size + 1), cum_var_exp, where='mid', label = 'Cumulative explained variance')\n",
    "plt.ylabel('Explained Variance Ratio')\n",
    "plt.xlabel('Principal Components')\n",
    "plt.legend(loc = 'best')\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Using pickle to save a model and its output.\n",
    "Pkl_Filename = \"Pickle_XG_Model.pkl\"  \n",
    "\n",
    "with open(Pkl_Filename, 'wb') as file:  \n",
    "    pickle.dump(modelXG, file)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n",
       "              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,\n",
       "              importance_type='gain', interaction_constraints='',\n",
       "              learning_rate=0.300000012, max_delta_step=0, max_depth=6,\n",
       "              min_child_weight=1, missing=nan, monotone_constraints='()',\n",
       "              n_estimators=100, n_jobs=8, num_parallel_tree=1, random_state=1,\n",
       "              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1,\n",
       "              tree_method='exact', validate_parameters=1, verbosity=None)"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#To open/load the pickled file later on: \n",
    "\n",
    "with open(Pkl_Filename, 'rb') as file:  \n",
    "    Pickled_XG_Model = pickle.load(file)\n",
    "\n",
    "Pickled_XG_Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test score: 93.21 %\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n",
       "       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1])"
      ]
     },
     "execution_count": 127,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Using the file\n",
    "\n",
    "score = Pickled_XG_Model.score(x_test, y_test)  \n",
    "# Print the Score\n",
    "print(\"Test score: {0:.2f} %\".format(100 * score))  \n",
    "\n",
    "# Predict the Labels using the reloaded Model\n",
    "y_predict = Pickled_XG_Model.predict(x_test)  \n",
    "\n",
    "y_predict"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#We have tried Logistic Regression, Random Forest and XG Boost algorithm for the imbalanced classes. The heatmap of correlation showed few\n",
    "# areas in the column were completly wiped out/ blank which could have been removed after which the function of correlations above threshold \n",
    "# Could be carried out.\n",
    "\n",
    "#Across methods Logisitc Regression performed the worst in terms of accuracy while Random Forest and XG Boost performed better in accuracy.\n",
    "#However confusion matrix showed that linear regression is better as it was able to detect even true negetives. \n",
    "\n",
    "#PCA, feature importance were performed. Dimenion reduction was undertanken. \n",
    "#It was observed that on undersampling the data, the accuracy reduced however, the confusion matrix better caught the true negetives.\n",
    "#While oversampling model was difficult to run even after trying multiple libraries after reading blogs to help start the \n",
    "#SMOTE module of python.\n",
    "\n",
    "#As an experiment pickle method was used to save output of model XGBoost with normal data set. Both saving the file as .pkl \n",
    "#and opening the file again was performed\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
